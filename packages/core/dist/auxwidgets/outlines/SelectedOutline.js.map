{"version":3,"sources":["../../../src/auxwidgets/outlines/SelectedOutline.ts"],"sourcesContent":["import { IDesignerEngine, ID, Unsubscribe } from \"../../interfaces\";\r\nimport { IPlugin } from \"../../interfaces/plugin\";\r\nimport { DraggingNodesState } from \"../../reducers/draggingNodes\";\r\nimport { DraggingResourceState } from \"../../reducers/draggingResource\";\r\nimport { CanvasScrollEvent } from \"../../shell/events\";\r\nimport { AUX_BACKGROUND_COLOR } from \"../consts\";\r\nimport { numbToPx } from \"../utils/numbToPx\";\r\nimport { getMaxZIndex } from \"./getMaxZIndex\";\r\n\r\nexport class SelectedOutlineImpl implements IPlugin {\r\n  name: string = \"default.selected-outline\";\r\n  resizeObserver: ResizeObserver\r\n  private unsubscribe: Unsubscribe;\r\n  private htmls: {\r\n    [id: ID]: HTMLElement\r\n  } = {}\r\n  private nodeChangeUnsubscribe: Unsubscribe;\r\n  private selecteNodes: ID[] | null = null\r\n  private refreshedFlag = false\r\n  private unCanvasScroll: Unsubscribe\r\n  private draggingNodesOff: Unsubscribe\r\n  private draggingResourceOff: Unsubscribe\r\n\r\n  constructor(protected engine: IDesignerEngine) {\r\n    if (!engine.getShell().getContainer) {\r\n      console.error(\"Html 5 driver rootElement is undefined\")\r\n    }\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.unsubscribe = engine.getMonitor().subscribeToSelectChange(this.handleSelectChange)\r\n    this.nodeChangeUnsubscribe = engine.getMonitor().subscribeToHasNodeChanged(this.refresh)\r\n    this.unCanvasScroll = this.engine.getShell().subscribeTo(CanvasScrollEvent, this.refresh)\r\n    this.draggingNodesOff = this.engine.getMonitor().subscribeToDraggingNodes(this.handleDraggingNodes)\r\n    this.draggingResourceOff = this.engine.getMonitor().subscribeToDraggingResource(this.handleDraggingResource)\r\n  }\r\n\r\n  onResize = () => {\r\n    this.refresh()\r\n  }\r\n\r\n  onMutation = (mutations: any) => {\r\n    this.refresh()\r\n  }\r\n\r\n  render = () => {\r\n    this.clear()\r\n    for (const id of this.selecteNodes || []) {\r\n      const element = this.engine.getShell().getElement(id)\r\n      const canvas = this.engine.getShell().getCanvas(this.engine.getMonitor().getNodeDocumentId(id) || \"\")\r\n      const containerRect = canvas?.getContainerRect()\r\n\r\n      if (element && containerRect) {\r\n        const rect = element.getBoundingClientRect();\r\n        const htmlDiv = document.createElement('div')\r\n        htmlDiv.style.backgroundColor = \"transparent\"\r\n        htmlDiv.style.position = \"fixed\"\r\n        htmlDiv.style.border = `solid 2px ${AUX_BACKGROUND_COLOR}`\r\n        htmlDiv.style.pointerEvents = \"none\"\r\n        htmlDiv.style.left = numbToPx(rect.left - containerRect.x)\r\n        htmlDiv.style.top = numbToPx(rect.top - containerRect.y)\r\n        htmlDiv.style.height = numbToPx(rect.height - 4)\r\n        htmlDiv.style.width = numbToPx(rect.width - 4)\r\n        htmlDiv.style.zIndex = (getMaxZIndex(element) + 1).toString()\r\n        canvas?.appendChild(htmlDiv)\r\n        this.htmls[id] = htmlDiv\r\n\r\n        this.resizeObserver.observe(element)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSelectChange = (selectedIds: ID[] | null) => {\r\n    this.resizeObserver.disconnect()\r\n    this.selecteNodes = selectedIds\r\n    this.refresh()\r\n    if (selectedIds?.length && !this.engine.getShell().getElement(selectedIds?.[0])) {\r\n      setTimeout(() => {\r\n        this.refresh()\r\n      }, 100)\r\n    }\r\n  }\r\n\r\n  handleDraggingNodes = (dragging: DraggingNodesState | null) => {\r\n    this.hideWhenDragging(!!dragging)\r\n  }\r\n\r\n  handleDraggingResource = (dragging: DraggingResourceState | null) => {\r\n    this.hideWhenDragging(!!dragging)\r\n  }\r\n\r\n  private hideWhenDragging = (dragging: boolean) => {\r\n    if (dragging) {\r\n      for (const key of Object.keys(this.htmls)) {\r\n        this.htmls[key].style.display = \"none\"\r\n      }\r\n    } else {\r\n      for (const key of Object.keys(this.htmls)) {\r\n        this.htmls[key].style.display = \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  onViewportChange = () => {\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshedFlag = true\r\n    setTimeout(() => {\r\n      if (this.refreshedFlag) {\r\n        this.render()\r\n        this.refreshedFlag = false\r\n      }\r\n    }, 20)\r\n  }\r\n\r\n  destory(): void {\r\n    this.clear()\r\n    this.unsubscribe()\r\n    this.nodeChangeUnsubscribe()\r\n    this.unCanvasScroll()\r\n    this.draggingNodesOff?.()\r\n    this.draggingResourceOff?.()\r\n  }\r\n\r\n  private clear() {\r\n    for (const id of Object.keys(this.htmls)) {\r\n      this.htmls[id].remove()\r\n    }\r\n    this.htmls = {}\r\n  }\r\n}\r\n\r\nexport const SelectedOutline = (engine: IDesignerEngine) => {\r\n  return new SelectedOutlineImpl(engine)\r\n}\r\n"],"names":["CanvasScrollEvent","AUX_BACKGROUND_COLOR","numbToPx","getMaxZIndex","SelectedOutlineImpl","destory","clear","unsubscribe","nodeChangeUnsubscribe","unCanvasScroll","draggingNodesOff","draggingResourceOff","id","Object","keys","htmls","remove","constructor","engine","name","selecteNodes","refreshedFlag","onResize","refresh","onMutation","mutations","render","element","getShell","getElement","canvas","getCanvas","getMonitor","getNodeDocumentId","containerRect","getContainerRect","rect","getBoundingClientRect","htmlDiv","document","createElement","style","backgroundColor","position","border","pointerEvents","left","x","top","y","height","width","zIndex","toString","appendChild","resizeObserver","observe","handleSelectChange","selectedIds","disconnect","length","setTimeout","handleDraggingNodes","dragging","hideWhenDragging","handleDraggingResource","key","display","onViewportChange","getContainer","console","error","ResizeObserver","subscribeToSelectChange","subscribeToHasNodeChanged","subscribeTo","subscribeToDraggingNodes","subscribeToDraggingResource","SelectedOutline"],"mappings":"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"}