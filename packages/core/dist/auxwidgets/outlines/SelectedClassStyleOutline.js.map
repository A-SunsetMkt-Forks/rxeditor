{"version":3,"sources":["../../../src/auxwidgets/outlines/SelectedClassStyleOutline.ts"],"sourcesContent":["import { IDesignerEngine, ID, Unsubscribe } from \"../../interfaces\";\r\nimport { IPlugin } from \"../../interfaces/plugin\";\r\nimport { DraggingNodesState } from \"../../reducers/draggingNodes\";\r\nimport { DraggingResourceState } from \"../../reducers/draggingResource\";\r\nimport { CanvasResizeEvent, CanvasScrollEvent } from \"../../shell/events\";\r\nimport { AddDecoratorEvent } from \"../../shell/events/canvas/AddDecoratorEvent\";\r\nimport { RemoveDecoratorEvent } from \"../../shell/events/canvas/RemoveDecoratorEvent\";\r\nimport { AUX_BACKGROUND_COLOR } from \"../consts\";\r\n\r\n//这个不好用，有的地方会显示不全，废弃\r\nexport class SelectedClassStyleOutlineImpl implements IPlugin {\r\n  name: string = \"default.selected-outline\";\r\n  htmlStyle: HTMLElement;\r\n  private unsubscribe: Unsubscribe;\r\n  private nodeChangeUnsubscribe: Unsubscribe;\r\n  private selecteNodes: ID[] | null = null\r\n  private refreshedFlag = false\r\n  private unCanvasScroll: Unsubscribe\r\n  private unCanvasResize: Unsubscribe\r\n  private unThemeModeChange: Unsubscribe\r\n  private draggingNodesOff: Unsubscribe\r\n  private draggingResourceOff: Unsubscribe\r\n  private addDecoratorOff: Unsubscribe\r\n  private removeDecoratorOff: Unsubscribe\r\n\r\n  constructor(protected engine: IDesignerEngine) {\r\n    if (!engine.getShell().getContainer) {\r\n      console.error(\"Html 5 driver rootElement is undefined\")\r\n    }\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `.rx-node-outline {  outline:solid 2px ${AUX_BACKGROUND_COLOR}; z-index:1;}`;\r\n    this.htmlStyle = style\r\n    //this.unmountUnsubscribe = this.engine.getShell().subscribeTo(NodeUnmountedEvent, this.handleNodeMounted)\r\n    this.unsubscribe = engine.getMonitor().subscribeToSelectChange(this.listenSelectChange)\r\n    this.nodeChangeUnsubscribe = engine.getMonitor().subscribeToHasNodeChanged(this.refresh)\r\n    this.unCanvasScroll = this.engine.getShell().subscribeTo(CanvasScrollEvent, this.refresh)\r\n    this.unCanvasResize = this.engine.getShell().subscribeTo(CanvasResizeEvent, this.refresh)\r\n    this.unThemeModeChange = engine.getMonitor().subscribeToThemeModeChange(this.handleThemeChange)\r\n    //this.unNodeMounted = this.engine.getShell().subscribeTo(NodeMountedEvent, this.handleNodeMounted)\r\n    this.draggingNodesOff = this.engine.getMonitor().subscribeToDraggingNodes(this.handleDraggingNodes)\r\n    this.draggingResourceOff = this.engine.getMonitor().subscribeToDraggingResource(this.handleDraggingResource)\r\n    this.addDecoratorOff = this.engine.getShell().subscribeTo(AddDecoratorEvent, this.refresh)\r\n    this.removeDecoratorOff = this.engine.getShell().subscribeTo(RemoveDecoratorEvent, this.refresh)\r\n  }\r\n\r\n\r\n  listenSelectChange = (selectedIds: ID[] | null) => {\r\n    this.clear()\r\n\r\n    for (const id of selectedIds || []) {\r\n      const element = this.engine.getShell().getElement(id)\r\n      const canvas = this.engine.getShell().getCanvas(this.engine.getMonitor().getNodeDocumentId(id) || \"\")\r\n      if (!canvas?.contains(this.htmlStyle)) {\r\n        canvas?.appendChild(this.htmlStyle)\r\n      }\r\n\r\n      if (element) {\r\n        element.classList.add('rx-node-outline')\r\n      }\r\n    }\r\n    this.selecteNodes = selectedIds\r\n  }\r\n\r\n  handleDraggingNodes = (dragging: DraggingNodesState | null) => {\r\n    this.hideWhenDragging(!!dragging)\r\n  }\r\n\r\n  handleDraggingResource = (dragging: DraggingResourceState | null) => {\r\n    this.hideWhenDragging(!!dragging)\r\n  }\r\n\r\n  private hideWhenDragging = (dragging: boolean) => {\r\n    if (dragging) {\r\n      for (const id of this.selecteNodes || []) {\r\n        const element = this.engine.getShell().getElement(id)\r\n        element?.classList.remove(\"rx-node-outline\")\r\n      }\r\n    } else {\r\n      for (const id of this.selecteNodes || []) {\r\n        const element = this.engine.getShell().getElement(id)\r\n        element?.classList.add(\"rx-node-outline\")\r\n      }\r\n    }\r\n  }\r\n\r\n  onViewportChange = () => {\r\n    this.refresh()\r\n  }\r\n\r\n  handleThemeChange = () => {\r\n    setTimeout(() => {\r\n      this.listenSelectChange(this.selecteNodes)\r\n    }, 200)\r\n  }\r\n\r\n  refresh = () => {\r\n    this.refreshedFlag = true\r\n    setTimeout(() => {\r\n      if (this.refreshedFlag) {\r\n        this.listenSelectChange(this.selecteNodes)\r\n        this.refreshedFlag = false\r\n      }\r\n    }, 20)\r\n  }\r\n\r\n  destory(): void {\r\n    this.clear()\r\n    this.unsubscribe()\r\n    this.nodeChangeUnsubscribe()\r\n    this.unCanvasScroll()\r\n    this.unCanvasResize()\r\n    this.unThemeModeChange()\r\n    this.draggingNodesOff?.()\r\n    this.draggingResourceOff?.()\r\n    this.addDecoratorOff?.()\r\n    this.removeDecoratorOff?.()\r\n  }\r\n\r\n  private clear() {\r\n    for (const id of this.selecteNodes || []) {\r\n      const element = this.engine.getShell().getElement(id)\r\n      element?.classList.remove(\"rx-node-outline\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const SelectedClassStyleOutline = (engine: IDesignerEngine) => {\r\n  return new SelectedClassStyleOutlineImpl(engine)\r\n}\r\n"],"names":["CanvasResizeEvent","CanvasScrollEvent","AddDecoratorEvent","RemoveDecoratorEvent","AUX_BACKGROUND_COLOR","SelectedClassStyleOutlineImpl","destory","clear","unsubscribe","nodeChangeUnsubscribe","unCanvasScroll","unCanvasResize","unThemeModeChange","draggingNodesOff","draggingResourceOff","addDecoratorOff","removeDecoratorOff","id","selecteNodes","element","engine","getShell","getElement","classList","remove","constructor","name","refreshedFlag","listenSelectChange","selectedIds","canvas","getCanvas","getMonitor","getNodeDocumentId","contains","htmlStyle","appendChild","add","handleDraggingNodes","dragging","hideWhenDragging","handleDraggingResource","onViewportChange","refresh","handleThemeChange","setTimeout","getContainer","console","error","style","document","createElement","innerHTML","subscribeToSelectChange","subscribeToHasNodeChanged","subscribeTo","subscribeToThemeModeChange","subscribeToDraggingNodes","subscribeToDraggingResource","SelectedClassStyleOutline"],"mappings":"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"}