{"version":3,"sources":["../../src/interfaces/shell.ts"],"sourcesContent":["import { IDispatchable, ICustomEvent, ISubscribable } from \"./event\"\r\nimport { ID, IRect } from \"./types\"\r\n\r\nexport interface IShellPane {\r\n\tid: ID\r\n\tgetElement(id: ID): HTMLElement | null\r\n\tgetContainerRect(): IRect | null\r\n\tgetTopRect(nodeId: ID): IRect | null\r\n\tappendChild(child: HTMLElement): void\r\n\tcontains(child: HTMLElement): boolean\r\n\tremoveChild(child: HTMLElement): void\r\n\tdestory(): void\r\n}\r\n\r\nexport interface IDriver {\r\n\tteardown(): void\r\n}\r\n\r\nexport type Canvases = {\r\n\t[documentId: ID]: IShellPane | undefined\r\n}\r\n\r\n\r\n//处理鼠标键盘事件，将其转换为 Engine 事件。\r\nexport interface IDesignerShell extends ISubscribable, IDispatchable<ICustomEvent<any>> {\r\n\t//状态\r\n\tdragging: boolean\r\n\r\n\tgetContainer(): IShellPane | undefined\r\n\tsetContainer(container: IShellPane): void\r\n\r\n\tgetCanvas(documentId: ID): IShellPane | undefined\r\n\tgetAllCanvases(): Canvases\r\n\taddCanvas(canvas: IShellPane): void\r\n\tremoveCanvas(documentId: ID): void\r\n\r\n\tgetElement(nodeId: ID): HTMLElement | null\r\n\tgetTopRect(nodeId: ID): IRect | null\r\n\tdestory(): void\r\n}\r\n\r\nexport type IDriverFactory = (\r\n\tshell: IDesignerShell,\r\n\telement: Element | Node | HTMLElement,\r\n) => IDriver\r\n"],"names":[],"mappings":"AAAA,WA4CY"}