{"version":3,"sources":["../../src/interfaces/types.ts"],"sourcesContent":["export type Identifier = string | symbol\r\nexport type SourceType = Identifier\r\nexport type TargetType = Identifier | Identifier[]\r\nexport type Unsubscribe = () => void\r\nexport type Listener = () => void\r\nexport type ID = string\r\n\r\nexport interface IXYCoord{\r\n\tx: number\r\n\ty: number\r\n}\r\n\r\nexport interface IRect {\r\n\tx: number,\r\n\ty: number,\r\n\twidth: number,\r\n\theight: number,\r\n}\r\n\r\nexport enum NodeStatus {\r\n\tNormal = \"normal\",\r\n\tDisabled = \"disabled\"\r\n}\r\n\r\nexport enum NodeType {\r\n\tNode = \"node\",\r\n\tResource = \"resource\",\r\n\tAuxWidget = \"aux-widget\"\r\n}\r\n\r\n//===========================================>>>\r\n// HTML Dom 附加属性，驱动模块根据该属性识别节点\r\nexport const RXID_ATTR_NAME = \"rx-id\"\r\nexport const RX_NODE_TYPE_ATTR_NAME = \"rx-node-type\" //对应枚举NodeType\r\nexport const RX_STATUS_ATTR_NAME = \"rx-status\" //对应枚举NodeStatus\r\n\r\nexport type RxProps = {\r\n\t[RXID_ATTR_NAME]: ID,\r\n\t[RX_NODE_TYPE_ATTR_NAME]?: NodeType, //默认为Normal\r\n\t[RX_STATUS_ATTR_NAME]?: NodeStatus //默认为Normal\r\n}\r\n//<<<=============================================\r\n\r\nexport enum DocumentSelectionMode {\r\n\tNormal = \"normal\",\r\n\tRangeSelection = \"rangeSelection\"\r\n}\r\n\r\n"],"names":["NodeStatus","Normal","Disabled","NodeType","Node","Resource","AuxWidget","RXID_ATTR_NAME","RX_NODE_TYPE_ATTR_NAME","RX_STATUS_ATTR_NAME","DocumentSelectionMode","RangeSelection"],"mappings":"WAmBO;UAAKA,UAAU;IAAVA,WACXC,YAAS;IADED,WAEXE,cAAW;GAFAF,eAAAA;WAKL;UAAKG,QAAQ;IAARA,SACXC,UAAO;IADID,SAEXE,cAAW;IAFAF,SAGXG,eAAY;GAHDH,aAAAA;AAMZ,gDAAgD;AAChD,8BAA8B;AAC9B,OAAO,MAAMI,iBAAiB,QAAO;AACrC,OAAO,MAAMC,yBAAyB,eAAe,cAAc;CAAf;AACpD,OAAO,MAAMC,sBAAsB,YAAY,gBAAgB;CAAjB;WASvC;UAAKC,qBAAqB;IAArBA,sBACXT,YAAS;IADES,sBAEXC,oBAAiB;GAFND,0BAAAA"}