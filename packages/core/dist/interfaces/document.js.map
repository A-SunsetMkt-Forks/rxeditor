{"version":3,"sources":["../../src/interfaces/document.ts"],"sourcesContent":["import { NodesById } from \"reducers/nodesById\";\r\nimport { IAction } from \"./action\";\r\n//import { IDesignerParams } from \"./component\";\r\nimport { DocumentActionPayload } from \"./payloads\";\r\nimport { ID, RxProps } from \"./types\";\r\n\r\nexport type CanvasWidthLimits = {\r\n  minWidth?: number,\r\n  maxWidth?: number,\r\n}\r\n\r\nexport interface ISnapshot {\r\n  nodes: NodesById;\r\n  selectedIds: ID[] | null;\r\n  actionType: HistoryableActionType;\r\n  createdAt: number;\r\n}\r\n\r\nexport interface NodeChunk {\r\n  rootNodes: ITreeNode[]\r\n  nodesById: NodesById\r\n}\r\n\r\nexport enum NodeRelativePosition {\r\n  InTop = 1,\r\n  InBottom,\r\n  Before,\r\n  After\r\n}\r\nexport type NodeListener = (node: ITreeNode) => void\r\n\r\nexport interface IDocumentAction<Payload extends DocumentActionPayload> extends IAction<Payload> {\r\n  payload?: Payload\r\n}\r\n\r\nexport type ViewType = \"design\" | \"json\" | \"preview\" | string\r\nexport const DefulstViewType = \"design\"\r\n\r\nexport interface INodeMeta<IField = any, IReactions = any> {\r\n  componentName: string,\r\n  props?: {\r\n    [key: string]: any,\r\n  },\r\n  \"x-field\"?: IField,\r\n  \"x-reactions\"?: IReactions,\r\n  //锁定子控件\r\n  locked?: boolean,\r\n  //自己渲染，引擎不渲染\r\n  selfRender?: boolean,\r\n}\r\n\r\nexport interface IDesignerProps {\r\n  style?: any\r\n  [key: string]: any,\r\n}\r\n\r\nexport interface ITreeNode {\r\n  id: ID\r\n  title?: string\r\n  description?: string\r\n  meta: INodeMeta\r\n  parentId?: ID\r\n  children: ID[]\r\n  isSlot: boolean,\r\n  slots?: {\r\n    [name: string]: ID\r\n  }\r\n  documentId: ID\r\n  //标识专用属性，不通过外部传入，系统自动构建\r\n  rxProps?: RxProps\r\n  //设计时的属性，比如readOnly， open等\r\n  designerProps?: IDesignerProps\r\n  //用来编辑属性的schema\r\n  designerSchema?: INodeSchema\r\n  //设计器专用属性，比如是否锁定\r\n  //designerParams?: IDesignerParams\r\n}\r\n\r\nexport interface NodeBehavior {\r\n  isDisabled: () => boolean\r\n  isSelectable: () => boolean\r\n  isDroppable: () => boolean\r\n  isDraggable: () => boolean\r\n  isDeletable: () => boolean\r\n  isCloneable: () => boolean\r\n  isNoPlaceholder: () => boolean\r\n  isNoRef: () => boolean\r\n  isLockable: () => boolean\r\n}\r\n\r\nexport interface INodeSchema<IField = any, IReactions = any> extends INodeMeta<IField, IReactions> {\r\n  //name?: string,\r\n  //引用一段schema，ref赋值name，用于框架等分块编辑\r\n  //ref?: string,\r\n  children?: INodeSchema[]\r\n  slots?: {\r\n    [name: string]: INodeSchema | undefined\r\n  }\r\n}\r\n\r\n// export interface IBlocksSchema {\r\n//   [bolckName: string]: INodeSchema\r\n// }\r\n\r\n// export interface IBlocksTreeNode {\r\n//   [bolckName: string]: ITreeNode\r\n// }\r\n\r\nexport enum HistoryableActionType {\r\n  Default = \"Default\",\r\n  Add = \"Add\",\r\n  Move = \"Move\",\r\n  Remove = \"Remove\",\r\n  Copy = \"Copy\",\r\n  Clone = \"Clone\",\r\n  Change = \"Change\",\r\n  RemoveSlot = \"RemoveSlot\",\r\n  AddSlot = \"AddSlot\"\r\n}\r\n\r\n/**\r\n * 文档模型，类似语法糖，对Engine部分接口的封装\r\n */\r\nexport interface IDocument {\r\n  id: ID\r\n  destory(): void\r\n\r\n  initialize(rootSchema: INodeSchema, documentId: ID): void\r\n  moveTo(sourceId: ID, targetId: ID, pos: NodeRelativePosition): void\r\n  multiMoveTo(sourceIds: ID[], targetId: ID, pos: NodeRelativePosition): void\r\n  addNewNodes(elements: INodeSchema | INodeSchema[], targetId: ID, pos: NodeRelativePosition): NodeChunk\r\n  remove(sourceId: ID): void\r\n  clone(sourceId: ID): void\r\n  changeNodeMeta(id: ID, newMeta: INodeMeta): void\r\n  removeSlot(id: ID, name: string): void\r\n  addSlot(id: ID, name: string): void\r\n  dispatch(action: IDocumentAction<any>): void\r\n  backup(actionType: HistoryableActionType): void\r\n  undo(): void\r\n  redo(): void\r\n  goto(index: number): void\r\n\r\n  getRootNode(): ITreeNode | null\r\n  getNode(id: ID): ITreeNode | null\r\n\r\n  getSchemaTree(): INodeSchema | null\r\n}\r\n"],"names":["NodeRelativePosition","InTop","InBottom","Before","After","DefulstViewType","HistoryableActionType","Default","Add","Move","Remove","Copy","Clone","Change","RemoveSlot","AddSlot"],"mappings":"WAuBO;UAAKA,oBAAoB;IAApBA,qBAAAA,qBACVC,WAAQ,KAARA;IADUD,qBAAAA,qBAEVE,cAAAA,KAAAA;IAFUF,qBAAAA,qBAGVG,YAAAA,KAAAA;IAHUH,qBAAAA,qBAIVI,WAAAA,KAAAA;GAJUJ,yBAAAA;AAaZ,OAAO,MAAMK,kBAAkB,SAAQ;WAwEhC;UAAKC,qBAAqB;IAArBA,sBACVC,aAAAA;IADUD,sBAEVE,SAAAA;IAFUF,sBAGVG,UAAAA;IAHUH,sBAIVI,YAAAA;IAJUJ,sBAKVK,UAAAA;IALUL,sBAMVM,WAAAA;IANUN,sBAOVO,YAAAA;IAPUP,sBAQVQ,gBAAAA;IARUR,sBASVS,aAAAA;GATUT,0BAAAA"}