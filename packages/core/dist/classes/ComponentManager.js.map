{"version":3,"sources":["../../src/classes/ComponentManager.ts"],"sourcesContent":["import { IBehavior, IBehaviorRule, IComponentConfig, IComponentManager, IDesignerEngine, ITreeNode, Selector } from \"interfaces\";\r\nimport { isFn } from \"utils/types\";\r\n\r\nexport class ComponentBehavior implements IBehavior {\r\n  selector: string | Selector;\r\n  rule: IBehaviorRule;\r\n  constructor(public name: string, rule: IBehaviorRule) {\r\n    this.selector = name\r\n    this.rule = rule\r\n  }\r\n}\r\n\r\nexport class ComponentManager implements IComponentManager {\r\n  private behaviors: {\r\n    [name: string]: IBehavior\r\n  } = {}\r\n  private components: {\r\n    [name: string]: IComponentConfig\r\n  } = {}\r\n\r\n  constructor(private engine: IDesignerEngine) { }\r\n  getComponentDesigner(componentName: string): IComponentConfig | undefined {\r\n    return this.components[componentName]\r\n  }\r\n  // getDesignerSchema(componentName: string): INodeSchema | undefined {\r\n  //   return this.components[componentName]?.designerSchema\r\n  // }\r\n\r\n  registerComponents(...componentDesigners: IComponentConfig[]): void {\r\n    for (const designer of componentDesigners) {\r\n      this.components[designer.componentName] = designer\r\n      if (designer.behaviorRule) {\r\n        this.registerBehaviors(new ComponentBehavior(designer.componentName, designer.behaviorRule))\r\n      }\r\n      if (designer.designerLocales) {\r\n        this.engine.getLoacalesManager().registerComponentLocales(designer.componentName, designer.designerLocales)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 把多个符合条件的behavior合并成一个Rule\r\n   * @param nodeId \r\n   */\r\n  getNodeBehaviorRules(nodeId: string): IBehaviorRule[] {\r\n    const rules: IBehaviorRule[] = []\r\n\r\n    const node = this.engine.getMonitor().getNode(nodeId)\r\n    for (const key of Object.keys(this.behaviors)) {\r\n      const behavior = this.behaviors[key]\r\n      if (node && behavior.rule && this.meetSelector(node, behavior.selector)) {\r\n        rules.push(behavior.rule)\r\n      }\r\n    }\r\n    return rules\r\n  }\r\n\r\n  registerBehaviors(...behaviors: IBehavior[]): void {\r\n    for (const behavior of behaviors) {\r\n      this.behaviors[behavior.name] = behavior\r\n    }\r\n  }\r\n\r\n  removeBehaviors(...names: string[]): void {\r\n    for (const name of names) {\r\n      if (this.behaviors[name]) {\r\n        delete this.behaviors[name]\r\n      }\r\n    }\r\n  }\r\n  setBehaviors(...behaviors: IBehavior[]): void {\r\n    this.behaviors = {}\r\n    this.registerBehaviors(...behaviors)\r\n  }\r\n\r\n\r\n  private meetSelector(node: ITreeNode, selector: string | Selector) {\r\n    if (node.meta.componentName === selector) {\r\n      return true\r\n    } else if (isFn(selector)) {\r\n      return selector(node)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n}"],"names":["isFn","ComponentBehavior","constructor","name","rule","selector","ComponentManager","getComponentDesigner","componentName","components","registerComponents","componentDesigners","designer","behaviorRule","registerBehaviors","designerLocales","engine","getLoacalesManager","registerComponentLocales","getNodeBehaviorRules","nodeId","rules","node","getMonitor","getNode","key","Object","keys","behaviors","behavior","meetSelector","push","removeBehaviors","names","setBehaviors","meta"],"mappings":"AACA,SAASA,IAAI,QAAQ,cAAc;AAEnC,OAAO,MAAMC;IAGXC,YAAmBC,MAAcC,IAAmB,CAAE;oBAAnCD;QACjB,IAAI,CAACE,QAAQ,GAAGF;QAChB,IAAI,CAACC,IAAI,GAAGA;IACd;AACF,CAAC;AAED,OAAO,MAAME;IASXC,qBAAqBC,aAAqB,EAAgC;QACxE,OAAO,IAAI,CAACC,UAAU,CAACD,cAAc;IACvC;IACA,sEAAsE;IACtE,0DAA0D;IAC1D,IAAI;IAEJE,mBAAmB,GAAGC,kBAAsC,EAAQ;QAClE,KAAK,MAAMC,YAAYD,mBAAoB;YACzC,IAAI,CAACF,UAAU,CAACG,SAASJ,aAAa,CAAC,GAAGI;YAC1C,IAAIA,SAASC,YAAY,EAAE;gBACzB,IAAI,CAACC,iBAAiB,CAAC,IAAIb,kBAAkBW,SAASJ,aAAa,EAAEI,SAASC,YAAY;YAC5F,CAAC;YACD,IAAID,SAASG,eAAe,EAAE;gBAC5B,IAAI,CAACC,MAAM,CAACC,kBAAkB,GAAGC,wBAAwB,CAACN,SAASJ,aAAa,EAAEI,SAASG,eAAe;YAC5G,CAAC;QACH;IACF;IAEA;;;GAGC,GACDI,qBAAqBC,MAAc,EAAmB;QACpD,MAAMC,QAAyB,EAAE;QAEjC,MAAMC,OAAO,IAAI,CAACN,MAAM,CAACO,UAAU,GAAGC,OAAO,CAACJ;QAC9C,KAAK,MAAMK,OAAOC,OAAOC,IAAI,CAAC,IAAI,CAACC,SAAS,EAAG;YAC7C,MAAMC,WAAW,IAAI,CAACD,SAAS,CAACH,IAAI;YACpC,IAAIH,QAAQO,SAASzB,IAAI,IAAI,IAAI,CAAC0B,YAAY,CAACR,MAAMO,SAASxB,QAAQ,GAAG;gBACvEgB,MAAMU,IAAI,CAACF,SAASzB,IAAI;YAC1B,CAAC;QACH;QACA,OAAOiB;IACT;IAEAP,kBAAkB,GAAGc,SAAsB,EAAQ;QACjD,KAAK,MAAMC,YAAYD,UAAW;YAChC,IAAI,CAACA,SAAS,CAACC,SAAS1B,IAAI,CAAC,GAAG0B;QAClC;IACF;IAEAG,gBAAgB,GAAGC,KAAe,EAAQ;QACxC,KAAK,MAAM9B,QAAQ8B,MAAO;YACxB,IAAI,IAAI,CAACL,SAAS,CAACzB,KAAK,EAAE;gBACxB,OAAO,IAAI,CAACyB,SAAS,CAACzB,KAAK;YAC7B,CAAC;QACH;IACF;IACA+B,aAAa,GAAGN,SAAsB,EAAQ;QAC5C,IAAI,CAACA,SAAS,GAAG,CAAC;QAClB,IAAI,CAACd,iBAAiB,IAAIc;IAC5B;IAGQE,aAAaR,IAAe,EAAEjB,QAA2B,EAAE;QACjE,IAAIiB,KAAKa,IAAI,CAAC3B,aAAa,KAAKH,UAAU;YACxC,OAAO,IAAI;QACb,OAAO,IAAIL,KAAKK,WAAW;YACzB,OAAOA,SAASiB;QAClB,CAAC;QAED,OAAO,KAAK;IACd;IAhEApB,YAAoBc,OAAyB;sBAAzBA;aAPZY,YAEJ,CAAC;aACGnB,aAEJ,CAAC;IAE0C;AAkEjD,CAAC"}