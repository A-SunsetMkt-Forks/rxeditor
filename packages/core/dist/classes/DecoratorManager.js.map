{"version":3,"sources":["../../src/classes/DecoratorManager.ts"],"sourcesContent":["import { IDesignerEngine } from \"interfaces\";\r\nimport { IDecorator, IDecoratorManager } from \"interfaces/decorator\";\r\nimport { AddDecoratorEvent } from \"shell/events/canvas/AddDecoratorEvent\";\r\nimport { RemoveDecoratorEvent } from \"shell/events/canvas/RemoveDecoratorEvent\";\r\n\r\nexport type Decorators = {\r\n  [key: string]: IDecorator | undefined\r\n}\r\n\r\nexport type DocumentDecorators = {\r\n  [key: string]: Decorators\r\n}\r\n\r\nexport class DecoratorManager implements IDecoratorManager {\r\n  private decorators: DocumentDecorators = {}\r\n  constructor(private engine: IDesignerEngine) {\r\n    //engine.getShell().subscribeTo(NodeMountedEvent, this.handleMounted)\r\n  }\r\n\r\n  addDecorator(decorator: IDecorator, documentId: string): void {\r\n    if (!this.decorators[documentId]) {\r\n      this.decorators[documentId] = {}\r\n    }\r\n\r\n    this.decorators[documentId][decorator.name] = decorator\r\n    this.attachDecorator(decorator, documentId)\r\n    this.engine.getShell().dispatch(new AddDecoratorEvent())\r\n  }\r\n\r\n  removeDecorator(name: string, documentId: string): void {\r\n    const decorator = this.decorators?.[documentId]?.[name]\r\n    if (decorator) {\r\n      this.detachDecorator(decorator, documentId)\r\n      delete this.decorators[documentId][name]\r\n      this.engine.getShell().dispatch(new RemoveDecoratorEvent())\r\n    }\r\n  }\r\n  getDecorator(name: string, documentId: string): IDecorator | undefined {\r\n    return this.decorators?.[documentId]?.[name]\r\n  }\r\n\r\n  private handleMounted = (e: any/*NodeMountedEvent*/) => {\r\n    const nodeId = e.nodeId\r\n    if (!nodeId) {\r\n      return\r\n    }\r\n\r\n    const el = this.engine.getShell().getElement(nodeId)\r\n    if (!el) {\r\n      //console.error(\"No Element\")\r\n      return\r\n    }\r\n    const documentId = this.engine.getMonitor().getNodeDocumentId(nodeId)\r\n    if (!documentId) {\r\n      console.error(\"No document\")\r\n      return\r\n    }\r\n    const decorators = this.decorators[documentId]\r\n    const node = this.engine.getMonitor().getNode(nodeId)\r\n    for (const name of Object.keys(decorators || {})) {\r\n      const decorator = decorators[name]\r\n      if (decorator && node) {\r\n        decorator.decorate(el, node)\r\n      }\r\n    }\r\n  }\r\n\r\n  private attachDecorator(decorator: IDecorator, documentId: string) {\r\n    const nodes = this.engine.getMonitor().getState().nodesById\r\n    const shell = this.engine.getShell()\r\n    for (const id of Object.keys(nodes)) {\r\n      const node = nodes[id]\r\n      if (node.documentId === documentId) {\r\n        const el = shell.getElement(id)\r\n        if (el) {\r\n          decorator.decorate(el, node)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detachDecorator(decorator: IDecorator, documentId: string) {\r\n    const nodes = this.engine.getMonitor().getState().nodesById\r\n    const shell = this.engine.getShell()\r\n    for (const id of Object.keys(nodes)) {\r\n      const node = nodes[id]\r\n      if (node.documentId === documentId) {\r\n        const el = shell.getElement(id)\r\n        if (el) {\r\n          decorator.unDecorate(el)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"],"names":["AddDecoratorEvent","RemoveDecoratorEvent","DecoratorManager","addDecorator","decorator","documentId","decorators","name","attachDecorator","engine","getShell","dispatch","removeDecorator","detachDecorator","getDecorator","nodes","getMonitor","getState","nodesById","shell","id","Object","keys","node","el","getElement","decorate","unDecorate","constructor","handleMounted","e","nodeId","getNodeDocumentId","console","error","getNode"],"mappings":"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"}