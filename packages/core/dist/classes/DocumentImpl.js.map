{"version":3,"sources":["../../src/classes/DocumentImpl.ts"],"sourcesContent":["import { makeRxId } from \"utils/make-rxId\";\r\nimport { HistoryableActionType, IDocument, IDocumentAction, INodeMeta, INodeSchema, ISnapshot, ITreeNode, NodeChunk, NodeRelativePosition } from \"../interfaces/document\";\r\nimport { AddNodesPayload, BackupPayload, ChangeMetaPayloads, DeleteNodesPayload, DocumentActionPayload, GotoPayload, MoveNodesPayload, RecoverSnapshotPayload, RemoveSlotPayload } from \"../interfaces/payloads\";\r\nimport { ID, IDesignerEngine } from \"interfaces\";\r\nimport { State } from \"reducers\";\r\nimport { parseNodeSchema, paseNodes } from \"funcs/parseNodeSchema\";\r\nimport { Store } from \"redux\";\r\nimport { ADD_NODES, BACKUP, CHANGE_NODE_META, DELETE_NODES, GOTO, INITIALIZE, MOVE_NODES, RECOVER_SNAPSHOT, REMOVE_DOCUMENT, REMOVE_SLOT } from \"actions/registry\";\r\nimport { DocumentState } from \"reducers/documentsById/document\";\r\nimport { NodesById } from \"reducers/nodesById\";\r\nimport { isArr, isStr } from \"utils/types\";\r\n\r\nexport class DocumentImpl implements IDocument {\r\n  id: string;\r\n  constructor(schema: INodeSchema,\r\n    private engine: IDesignerEngine,\r\n    private store: Store<State>\r\n  ) {\r\n    this.id = makeRxId()\r\n    this.initialize(schema, this.id)\r\n  }\r\n\r\n  initialize(rootSchema: INodeSchema, documentId: string): void {\r\n    const nodesById: NodesById = {}\r\n    if (!this.isBlocksSchema(rootSchema)) {\r\n      const root = parseNodeSchema(this.engine, documentId, rootSchema as INodeSchema, nodesById, false)\r\n      this.dispatch({\r\n        type: INITIALIZE,\r\n        payload: {\r\n          documentId: documentId,\r\n          nodesById,\r\n          rootId: root.id,\r\n        },\r\n      })\r\n      this.backup(HistoryableActionType.Default)\r\n    }\r\n  }\r\n  moveTo = (sourceId: string, targetId: string, pos: NodeRelativePosition): void => {\r\n    const playload: MoveNodesPayload = {\r\n      documentId: this.id,\r\n      sourceIds: [sourceId],\r\n      targetId,\r\n      pos\r\n    }\r\n    this.dispatch(this.createAction(MOVE_NODES, playload))\r\n  }\r\n  multiMoveTo(sourceIds: string[], targetId: string, pos: NodeRelativePosition): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  addNewNodes(elements: INodeSchema | INodeSchema[], targetId: string, pos: NodeRelativePosition): NodeChunk {\r\n    const nodes = paseNodes(this.engine, this.id, elements);\r\n    this.receiveNodes(nodes)\r\n    const playload: AddNodesPayload = {\r\n      documentId: this.id,\r\n      nodes,\r\n      targetId,\r\n      pos\r\n    }\r\n    this.dispatch(this.createAction(ADD_NODES, playload))\r\n\r\n    return nodes\r\n  }\r\n\r\n  remove = (sourceId: string): void => {\r\n    const playload: DeleteNodesPayload = {\r\n      documentId: this.id,\r\n      sourceIds: [sourceId],\r\n    }\r\n    this.dispatch(this.createAction(DELETE_NODES, playload))\r\n    this.backup(HistoryableActionType.Remove)\r\n  }\r\n\r\n  removeSlot(id: string, name: string): void {\r\n    const playload: RemoveSlotPayload = {\r\n      documentId: this.id,\r\n      nodeId: id,\r\n      slotName: name,\r\n    }\r\n    this.dispatch(this.createAction(REMOVE_SLOT, playload))\r\n    this.backup(HistoryableActionType.RemoveSlot)\r\n  }\r\n\r\n  addSlot(id: string, name: string): void {\r\n    const node = this.getNode(id)\r\n    if (node) {\r\n      const comdesigner = this.engine.getComponentManager().getComponentDesigner(node.meta.componentName)\r\n      const slotConfig = comdesigner?.slots?.[name]\r\n      let element: INodeSchema = { componentName: \"DefaultSlot\" }\r\n      if (isStr(slotConfig)) {\r\n        const slotElements = this.engine.getComponentManager().getComponentDesigner(slotConfig)?.resource?.elements\r\n        if (isArr(slotElements)) {\r\n          element = slotElements[0]\r\n        } else if (slotElements) {\r\n          element = slotElements\r\n        } else {\r\n          console.warn(\"No set slot on name:\", name)\r\n          return\r\n        }\r\n      } else if (slotConfig === true || slotConfig === undefined) {\r\n        element = { componentName: \"DefaultSlot\" }\r\n      } else {\r\n        const slotElement = isArr(slotConfig.resource?.elements) ? slotConfig.resource?.elements?.[0] : slotConfig.resource?.elements\r\n        if (slotElement) {\r\n          element = slotElement\r\n        }\r\n      }\r\n\r\n      const nodes = paseNodes(this.engine, this.id, element);\r\n      this.receiveNodes(nodes)\r\n      const playload: AddNodesPayload = {\r\n        documentId: this.id,\r\n        nodes,\r\n        targetId: node.id,\r\n        slot: name,\r\n      }\r\n      this.dispatch(this.createAction(ADD_NODES, playload))\r\n    } else {\r\n      console.error(\"Can not find node by id\", id)\r\n    }\r\n  }\r\n\r\n  clone(sourceId: string): void {\r\n    const sourceSchema = this.getNodeSchema(sourceId)\r\n    if (sourceSchema) {\r\n      const nodes = this.addNewNodes(sourceSchema, sourceId, NodeRelativePosition.After);\r\n      for (const node of nodes.rootNodes) {\r\n        this.engine.getActions().selectNodes([node.id], this.id)\r\n      }\r\n      this.backup(HistoryableActionType.Clone)\r\n    }\r\n  }\r\n\r\n  changeNodeMeta(id: string, newMeta: INodeMeta): void {\r\n    const payload: ChangeMetaPayloads = {\r\n      id,\r\n      meta: newMeta\r\n    }\r\n    this.engine.dispatch({ type: CHANGE_NODE_META, payload })\r\n    this.backup(HistoryableActionType.Change)\r\n  }\r\n\r\n  backup(actionType: HistoryableActionType): void {\r\n    const historyLength = this.getState()?.history.length;\r\n    const payload: BackupPayload = {\r\n      documentId: this.id,\r\n      nodes: this.engine.getMonitor().getState().nodesById,\r\n      selectedIds: this.getState()?.selectedIds || [],\r\n      actionType: actionType\r\n    }\r\n\r\n    this.engine.dispatch({ type: BACKUP, payload })\r\n    const gotoPayload: GotoPayload = {\r\n      documentId: this.id,\r\n      index: historyLength || 0\r\n    }\r\n    this.engine.dispatch({ type: GOTO, payload: gotoPayload })\r\n\r\n  }\r\n\r\n  undo(): void {\r\n    const state = this.getState()\r\n    if (state?.snapshotIndex === 0) {\r\n      return\r\n    }\r\n    if (state?.history.length) {\r\n      const currentIndex = state?.snapshotIndex || (state?.history.length - 1)\r\n      if (currentIndex > 0) {\r\n        const snapshot = state.history[currentIndex - 1]\r\n        if (snapshot) {\r\n          this.revoverSnapshot(snapshot)\r\n          this.dispatchGoto(currentIndex - 1)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  redo(): void {\r\n    const state = this.getState()\r\n    if (!state || state?.snapshotIndex === null) {\r\n      return\r\n    }\r\n\r\n    const currentIndex = state.snapshotIndex\r\n    if (currentIndex === state.history.length - 1) {\r\n      return\r\n    }\r\n    const snapshot = state.history[currentIndex + 1]\r\n    if (snapshot) {\r\n      this.dispatchGoto(currentIndex + 1)\r\n      this.revoverSnapshot(snapshot)\r\n    }\r\n  }\r\n\r\n  goto(index: number): void {\r\n    const state = this.getState()\r\n    const snapshot = state?.history[index]\r\n    if (snapshot) {\r\n      this.revoverSnapshot(snapshot)\r\n    }\r\n    this.dispatchGoto(index)\r\n  }\r\n\r\n  getRootNode(): ITreeNode | null {\r\n    const documentState = this.getState()\r\n    const state = this.store.getState()\r\n    return documentState?.rootId ? (state.nodesById[documentState?.rootId || \"\"] || null) : null\r\n  }\r\n  getNode = (id: string): ITreeNode | null => {\r\n    const state = this.store.getState()\r\n    return state?.nodesById?.[id] || null\r\n  }\r\n\r\n  destory(): void {\r\n    this.dispatch(this.createAction(REMOVE_DOCUMENT, { }))\r\n  }\r\n\r\n  getSchemaTree(): INodeSchema | null {\r\n    return this.getNodeSchema(this.getState()?.rootId || \"\")\r\n  }\r\n\r\n  dispatch(action: IDocumentAction<any>): void {\r\n    this.engine.dispatch(action)\r\n  }\r\n\r\n  public createAction(actionType: string, payload: any): IDocumentAction<DocumentActionPayload> {\r\n    return {\r\n      type: actionType,\r\n      payload: {\r\n        documentId: this.id,\r\n        ...payload\r\n      }\r\n    }\r\n  }\r\n\r\n  private getNodeSchema(id: ID): INodeSchema | null {\r\n    const node = this.getNode(id)\r\n    const slots: { [name: string]: INodeSchema } = {}\r\n    const children: INodeSchema[] = []\r\n    for (const key of Object.keys(node?.slots || {})) {\r\n      const slot = this.getNodeSchema(node?.slots?.[key] || \"\")\r\n      if (slot) {\r\n        slots[key] = slot\r\n      } else {\r\n        console.error(\"can not find slot\")\r\n      }\r\n    }\r\n\r\n    for (const childId of node?.children || []) {\r\n      const child = this.getNodeSchema(childId)\r\n      if (child) {\r\n        children.push(child)\r\n      } else {\r\n        console.error(\"can not find child\")\r\n      }\r\n    }\r\n    if (node) {\r\n      return {\r\n        ...node.meta,\r\n        slots,\r\n        children\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  private receiveNodes(nodes: NodeChunk) {\r\n    for (const key of Object.keys(nodes.nodesById)) {\r\n      nodes.nodesById[key].documentId = this.id\r\n    }\r\n  }\r\n\r\n  private dispatchGoto(index: number) {\r\n    const payload: GotoPayload = {\r\n      documentId: this.id,\r\n      index: index\r\n    }\r\n    this.engine.dispatch({ type: GOTO, payload })\r\n  }\r\n\r\n  private getState(): DocumentState | undefined {\r\n    return this.store.getState().documentsById[this.id]\r\n  }\r\n\r\n  private isBlocksSchema(schema: INodeSchema): boolean {\r\n    return !(schema as INodeSchema).componentName\r\n  }\r\n\r\n  private revoverSnapshot(snapshot: ISnapshot) {\r\n    const payload: RecoverSnapshotPayload = {\r\n      documentId: this.id,\r\n      snapshot\r\n    }\r\n    this.engine.dispatch({ type: RECOVER_SNAPSHOT, payload })\r\n  }\r\n}"],"names":["makeRxId","HistoryableActionType","NodeRelativePosition","parseNodeSchema","paseNodes","ADD_NODES","BACKUP","CHANGE_NODE_META","DELETE_NODES","GOTO","INITIALIZE","MOVE_NODES","RECOVER_SNAPSHOT","REMOVE_DOCUMENT","REMOVE_SLOT","isArr","isStr","DocumentImpl","initialize","rootSchema","documentId","nodesById","isBlocksSchema","root","engine","dispatch","type","payload","rootId","id","backup","Default","multiMoveTo","sourceIds","targetId","pos","Error","addNewNodes","elements","nodes","receiveNodes","playload","createAction","removeSlot","name","nodeId","slotName","RemoveSlot","addSlot","node","getNode","comdesigner","getComponentManager","getComponentDesigner","meta","componentName","slotConfig","slots","element","slotElements","resource","console","warn","undefined","slotElement","slot","error","clone","sourceId","sourceSchema","getNodeSchema","After","rootNodes","getActions","selectNodes","Clone","changeNodeMeta","newMeta","Change","actionType","historyLength","getState","history","length","getMonitor","selectedIds","gotoPayload","index","undo","state","snapshotIndex","currentIndex","snapshot","revoverSnapshot","dispatchGoto","redo","goto","getRootNode","documentState","store","destory","getSchemaTree","action","children","key","Object","keys","childId","child","push","documentsById","schema","constructor","moveTo","remove","Remove"],"mappings":"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"}