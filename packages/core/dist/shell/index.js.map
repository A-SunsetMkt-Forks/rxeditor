{"version":3,"sources":["../../src/shell/index.ts"],"sourcesContent":["import { Canvases, IRect, IShellPane } from 'interfaces'\r\nimport { IDesignerShell } from 'interfaces'\r\nimport { EventEngine } from 'interfaces/event'\r\n\r\n\r\nexport class DesignerShell extends EventEngine implements IDesignerShell {\r\n\tdragging: boolean = false\r\n\tprivate container?: IShellPane\r\n\tprivate canvases: Canvases = {}\r\n\r\n\tsetContainer(el: IShellPane): void {\r\n\t\tthis.container = el\r\n\t}\r\n\r\n\tgetContainer(): IShellPane | undefined {\r\n\t\treturn this.container\r\n\t}\r\n\r\n\tgetCanvas(documentId: string): IShellPane | undefined {\r\n\t\treturn this.canvases[documentId]\r\n\t}\r\n\r\n\tgetAllCanvases(): Canvases {\r\n\t\treturn this.canvases\r\n\t}\r\n\r\n\taddCanvas(canvas: IShellPane): void {\r\n\t\tthis.canvases[canvas.id] = canvas\r\n\t}\r\n\r\n\tremoveCanvas(documentId: string): void {\r\n\t\tconst canvas = this.canvases[documentId]\r\n\t\tcanvas?.destory()\r\n\t\tdelete this.canvases[documentId]\r\n\t}\r\n\r\n\tgetTopRect(nodeId: string): IRect | null {\r\n\t\tconst rect = this.container?.getTopRect(nodeId)\r\n\t\tif (rect) {\r\n\t\t\treturn rect\r\n\t\t}\r\n\r\n\t\tfor (const key of Object.keys(this.canvases)) {\r\n\t\t\tconst canvas = this.canvases[key]\r\n\t\t\tconst rect = canvas?.getTopRect(nodeId)\r\n\r\n\t\t\tif (rect) {\r\n\t\t\t\treturn rect\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n\r\n\tgetElement(nodeId: string): HTMLElement | null {\r\n\t\tconst ele = this.container?.getElement(nodeId)\r\n\t\tif (ele) {\r\n\t\t\treturn ele as HTMLElement\r\n\t\t}\r\n\r\n\t\tfor (const key of Object.keys(this.canvases)) {\r\n\t\t\tconst canvas = this.canvases[key]\r\n\t\t\tconst ele = canvas?.getElement(nodeId)\r\n\r\n\t\t\tif (ele) {\r\n\t\t\t\treturn ele\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n\r\n\tpublic destory(): void {\r\n\t\tthis.container?.destory()\r\n\t\tfor (const key of Object.keys(this.canvases)) {\r\n\t\t\tthis.canvases[key]?.destory()\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["EventEngine","DesignerShell","setContainer","el","container","getContainer","getCanvas","documentId","canvases","getAllCanvases","addCanvas","canvas","id","removeCanvas","destory","getTopRect","nodeId","rect","key","Object","keys","getElement","ele","dragging"],"mappings":"AAEA,SAASA,WAAW,QAAQ,mBAAkB;AAG9C,OAAO,MAAMC,sBAAsBD;IAKlCE,aAAaC,EAAc,EAAQ;QAClC,IAAI,CAACC,SAAS,GAAGD;IAClB;IAEAE,eAAuC;QACtC,OAAO,IAAI,CAACD,SAAS;IACtB;IAEAE,UAAUC,UAAkB,EAA0B;QACrD,OAAO,IAAI,CAACC,QAAQ,CAACD,WAAW;IACjC;IAEAE,iBAA2B;QAC1B,OAAO,IAAI,CAACD,QAAQ;IACrB;IAEAE,UAAUC,MAAkB,EAAQ;QACnC,IAAI,CAACH,QAAQ,CAACG,OAAOC,EAAE,CAAC,GAAGD;IAC5B;IAEAE,aAAaN,UAAkB,EAAQ;QACtC,MAAMI,SAAS,IAAI,CAACH,QAAQ,CAACD,WAAW;QACxCI,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQG,OAAO;QACf,OAAO,IAAI,CAACN,QAAQ,CAACD,WAAW;IACjC;IAEAQ,WAAWC,MAAc,EAAgB;YAC3B;QAAb,MAAMC,OAAO,CAAA,kBAAA,IAAI,CAACb,SAAS,cAAd,6BAAA,KAAA,IAAA,gBAAgBW,WAAWC;QACxC,IAAIC,MAAM;YACT,OAAOA;QACR,CAAC;QAED,KAAK,MAAMC,OAAOC,OAAOC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAG;YAC7C,MAAMG,SAAS,IAAI,CAACH,QAAQ,CAACU,IAAI;YACjC,MAAMD,OAAON,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQI,UAAU,CAACC;YAEhC,IAAIC,MAAM;gBACT,OAAOA;YACR,CAAC;QACF;QAEA,OAAO,IAAI;IACZ;IAEAI,WAAWL,MAAc,EAAsB;YAClC;QAAZ,MAAMM,MAAM,CAAA,kBAAA,IAAI,CAAClB,SAAS,cAAd,6BAAA,KAAA,IAAA,gBAAgBiB,WAAWL;QACvC,IAAIM,KAAK;YACR,OAAOA;QACR,CAAC;QAED,KAAK,MAAMJ,OAAOC,OAAOC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAG;YAC7C,MAAMG,SAAS,IAAI,CAACH,QAAQ,CAACU,IAAI;YACjC,MAAMI,MAAMX,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQU,UAAU,CAACL;YAE/B,IAAIM,KAAK;gBACR,OAAOA;YACR,CAAC;QACF;QAEA,OAAO,IAAI;IACZ;IAEOR,UAAgB;YACtB;QAAA,CAAA,kBAAA,IAAI,CAACV,SAAS,cAAd,6BAAA,KAAA,IAAA,gBAAgBU;QAChB,KAAK,MAAMI,OAAOC,OAAOC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAG;gBAC7C;YAAA,CAAA,qBAAA,IAAI,CAACA,QAAQ,CAACU,IAAI,cAAlB,gCAAA,KAAA,IAAA,mBAAoBJ;QACrB;IACD;;;aAvEAS,WAAoB,KAAK;aAEjBf,WAAqB,CAAC;;AAsE/B,CAAC"}