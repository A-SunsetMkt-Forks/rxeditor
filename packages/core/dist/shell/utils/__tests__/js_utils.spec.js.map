{"version":3,"sources":["../../../../src/shell/utils/__tests__/js_utils.spec.ts"],"sourcesContent":["import { memoize, union } from '../js_utils'\n\ndescribe('lodash replacement', () => {\n\tit('can memoize', () => {\n\t\tlet count = 0\n\t\tconst fn = memoize(() => {\n\t\t\tif (count > 0) {\n\t\t\t\tthrow new Error('too many invocations to memoized function')\n\t\t\t}\n\t\t\tcount += 1\n\t\t\treturn 100 + 30\n\t\t})\n\n\t\texpect(fn()).toEqual(130)\n\t\texpect(fn()).toEqual(130)\n\t\texpect(fn()).toEqual(130)\n\t})\n\n\tit('can compute union', () => {\n\t\tconst result = union([1, 2, 1, 3, 1, 5], [7, 8, 7, 9])\n\t\texpect(result).toEqual([1, 2, 3, 5, 7, 8, 9])\n\t})\n})\n"],"names":["memoize","union","describe","it","count","fn","Error","expect","toEqual","result"],"mappings":"AAAA,SAASA,OAAO,EAAEC,KAAK,QAAQ,cAAa;AAE5CC,SAAS,sBAAsB,IAAM;IACpCC,GAAG,eAAe,IAAM;QACvB,IAAIC,QAAQ;QACZ,MAAMC,KAAKL,QAAQ,IAAM;YACxB,IAAII,QAAQ,GAAG;gBACd,MAAM,IAAIE,MAAM,6CAA4C;YAC7D,CAAC;YACDF,SAAS;YACT,OAAO,MAAM;QACd;QAEAG,OAAOF,MAAMG,OAAO,CAAC;QACrBD,OAAOF,MAAMG,OAAO,CAAC;QACrBD,OAAOF,MAAMG,OAAO,CAAC;IACtB;IAEAL,GAAG,qBAAqB,IAAM;QAC7B,MAAMM,SAASR,MAAM;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE,EAAE;YAAC;YAAG;YAAG;YAAG;SAAE;QACrDM,OAAOE,QAAQD,OAAO,CAAC;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE;IAC7C;AACD"}