{"version":3,"sources":["../../../src/shell/utils/js_utils.ts"],"sourcesContent":["// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n"],"names":["memoize","fn","result","memoized","without","items","item","filter","i","union","itemsA","itemsB","set","Set","insertItem","add","forEach","key","push"],"mappings":"AAAA,4BAA4B;AAE5B,OAAO,SAASA,QAAWC,EAAW,EAAW;IAChD,IAAIC,SAAmB,IAAI;IAC3B,MAAMC,WAAW,IAAM;QACtB,IAAID,UAAU,IAAI,EAAE;YACnBA,SAASD;QACV,CAAC;QACD,OAAOC;IACR;IACA,OAAOC;AACR,CAAC;AAED;;CAEC,GACD,OAAO,SAASC,QAAWC,KAAU,EAAEC,IAAO,EAAE;IAC/C,OAAOD,MAAME,MAAM,CAAC,CAACC,IAAMA,MAAMF;AAClC,CAAC;AAED,OAAO,SAASG,MAAiCC,MAAW,EAAEC,MAAW,EAAE;IAC1E,MAAMC,MAAM,IAAIC;IAChB,MAAMC,aAAa,CAACR,OAAYM,IAAIG,GAAG,CAACT;IACxCI,OAAOM,OAAO,CAACF;IACfH,OAAOK,OAAO,CAACF;IAEf,MAAMZ,SAAc,EAAE;IACtBU,IAAII,OAAO,CAAC,CAACC,MAAQf,OAAOgB,IAAI,CAACD;IACjC,OAAOf;AACR,CAAC"}