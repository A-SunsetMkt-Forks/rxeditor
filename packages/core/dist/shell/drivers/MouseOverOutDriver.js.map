{"version":3,"sources":["../../../src/shell/drivers/MouseOverOutDriver.ts"],"sourcesContent":["import { IDriver, IDriverFactory } from \"interfaces\"\r\nimport { IDispatchable, ICustomEvent } from \"interfaces/event\"\r\nimport { MouseOverEvent } from \"../events/mouse/MouseOverEvent\"\r\nimport { MouseOutEvent } from \"../events/mouse/MouseOutEvent\"\r\n\r\nexport class MouseOverOutDriverImpl implements IDriver {\r\n\r\n  constructor(private dispatcher: IDispatchable<ICustomEvent<any>>, private element: Element | Node | HTMLElement) {\r\n    this.attach()\r\n  }\r\n\r\n  onMouseOver = (e: MouseEvent) => {\r\n    this.dispatcher.dispatch(\r\n      new MouseOverEvent({\r\n        offsetX: e.offsetX,\r\n        offsetY: e.offsetY,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n        target: e.target,\r\n        view: e.view,\r\n        altKey: e.altKey,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n      }, e)\r\n    )\r\n  }\r\n\r\n  onMouseOut = (e: MouseEvent) => {\r\n    this.dispatcher.dispatch(\r\n      new MouseOutEvent({\r\n        offsetX: e.offsetX,\r\n        offsetY: e.offsetY,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n        target: e.target,\r\n        view: e.view,\r\n        altKey: e.altKey,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n      }, e)\r\n    )\r\n  }\r\n\r\n  attach() {\r\n    this.element?.addEventListener('mouseover', this.onMouseOver as EventListener)\r\n    this.element?.addEventListener('mouseout', this.onMouseOut as EventListener)\r\n  }\r\n  teardown(): void {\r\n    this.element?.removeEventListener('mouseover', this.onMouseOver as EventListener)\r\n    this.element?.removeEventListener('mouseout', this.onMouseOut as EventListener)\r\n  }\r\n}\r\n\r\nexport const MouseOverOutDriver: IDriverFactory = (\r\n  dispatcher: IDispatchable<ICustomEvent<any>>,\r\n  element: Element | Node | HTMLElement,\r\n) => {\r\n  return new MouseOverOutDriverImpl(\r\n    dispatcher,\r\n    element,\r\n  )\r\n}"],"names":["MouseOverEvent","MouseOutEvent","MouseOverOutDriverImpl","attach","element","addEventListener","onMouseOver","onMouseOut","teardown","removeEventListener","constructor","dispatcher","e","dispatch","offsetX","offsetY","clientX","clientY","pageX","pageY","target","view","altKey","ctrlKey","shiftKey","MouseOverOutDriver"],"mappings":"AAEA,SAASA,cAAc,QAAQ,iCAAgC;AAC/D,SAASC,aAAa,QAAQ,gCAA+B;AAE7D,OAAO,MAAMC;IA0CXC,SAAS;YACP,eACA;QADA,CAAA,gBAAA,IAAI,CAACC,OAAO,cAAZ,2BAAA,KAAA,IAAA,cAAcC,iBAAiB,aAAa,IAAI,CAACC,WAAW;QAC5D,CAAA,iBAAA,IAAI,CAACF,OAAO,cAAZ,4BAAA,KAAA,IAAA,eAAcC,iBAAiB,YAAY,IAAI,CAACE,UAAU;IAC5D;IACAC,WAAiB;YACf,eACA;QADA,CAAA,gBAAA,IAAI,CAACJ,OAAO,cAAZ,2BAAA,KAAA,IAAA,cAAcK,oBAAoB,aAAa,IAAI,CAACH,WAAW;QAC/D,CAAA,iBAAA,IAAI,CAACF,OAAO,cAAZ,4BAAA,KAAA,IAAA,eAAcK,oBAAoB,YAAY,IAAI,CAACF,UAAU;IAC/D;IA/CAG,YAAoBC,YAAsDP,QAAuC;0BAA7FO;uBAAsDP;aAI1EE,cAAc,CAACM,IAAkB;YAC/B,IAAI,CAACD,UAAU,CAACE,QAAQ,CACtB,IAAIb,eAAe;gBACjBc,SAASF,EAAEE,OAAO;gBAClBC,SAASH,EAAEG,OAAO;gBAClBC,SAASJ,EAAEI,OAAO;gBAClBC,SAASL,EAAEK,OAAO;gBAClBC,OAAON,EAAEM,KAAK;gBACdC,OAAOP,EAAEO,KAAK;gBACdC,QAAQR,EAAEQ,MAAM;gBAChBC,MAAMT,EAAES,IAAI;gBACZC,QAAQV,EAAEU,MAAM;gBAChBC,SAASX,EAAEW,OAAO;gBAClBC,UAAUZ,EAAEY,QAAQ;YACtB,GAAGZ;QAEP;aAEAL,aAAa,CAACK,IAAkB;YAC9B,IAAI,CAACD,UAAU,CAACE,QAAQ,CACtB,IAAIZ,cAAc;gBAChBa,SAASF,EAAEE,OAAO;gBAClBC,SAASH,EAAEG,OAAO;gBAClBC,SAASJ,EAAEI,OAAO;gBAClBC,SAASL,EAAEK,OAAO;gBAClBC,OAAON,EAAEM,KAAK;gBACdC,OAAOP,EAAEO,KAAK;gBACdC,QAAQR,EAAEQ,MAAM;gBAChBC,MAAMT,EAAES,IAAI;gBACZC,QAAQV,EAAEU,MAAM;gBAChBC,SAASX,EAAEW,OAAO;gBAClBC,UAAUZ,EAAEY,QAAQ;YACtB,GAAGZ;QAEP;QArCE,IAAI,CAACT,MAAM;IACb;AA8CF,CAAC;AAED,OAAO,MAAMsB,qBAAqC,CAChDd,YACAP,UACG;IACH,OAAO,IAAIF,uBACTS,YACAP;AAEJ,EAAC"}