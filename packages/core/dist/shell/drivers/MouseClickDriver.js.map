{"version":3,"sources":["../../../src/shell/drivers/MouseClickDriver.ts"],"sourcesContent":["import { MouseClickEvent, MouseDoubleClickEvent } from \"shell/events/mouse\"\r\nimport { IDriver, IDriverFactory } from \"interfaces\"\r\nimport { IDispatchable, ICustomEvent } from \"interfaces/event\"\r\n\r\nexport class MouseClickDriverImpl implements IDriver {\r\n\r\n  constructor(private dispatcher: IDispatchable<ICustomEvent<any>>, private element: Element | Node | HTMLElement) {\r\n    this.attach()\r\n  }\r\n\r\n  onMouseClick = (e: MouseEvent) => {\r\n    this.dispatcher.dispatch(\r\n      new MouseClickEvent({\r\n        offsetX: e.offsetX,\r\n        offsetY: e.offsetY,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n        target: e.target,\r\n        view: e.view,\r\n        altKey: e.altKey,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n      }, e)\r\n    )\r\n  }\r\n\r\n  onMouseDoubleClick = (e: MouseEvent) => {\r\n    this.dispatcher.dispatch(\r\n      new MouseDoubleClickEvent({\r\n        offsetX: e.offsetX,\r\n        offsetY: e.offsetY,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n        target: e.target,\r\n        view: e.view,\r\n        altKey: e.altKey,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n      }, e)\r\n    )\r\n  }\r\n\r\n  attach() {\r\n     this.element?.addEventListener('click', this.onMouseClick as EventListener)\r\n     this.element?.addEventListener('dblclick', this.onMouseDoubleClick as EventListener)\r\n  }\r\n\r\n  teardown(): void {\r\n     this.element?.removeEventListener('click', this.onMouseClick as EventListener)\r\n     this.element?.removeEventListener('dblclick', this.onMouseDoubleClick as EventListener)\r\n  }\r\n\r\n}\r\n\r\nexport const MouseClickDriver: IDriverFactory = (\r\n  dispatcher: IDispatchable<ICustomEvent<any>>,\r\n  element: Element | Node | HTMLElement,\r\n) => {\r\n  return new MouseClickDriverImpl(\r\n    dispatcher,\r\n    element,\r\n  )\r\n}"],"names":["MouseClickEvent","MouseDoubleClickEvent","MouseClickDriverImpl","attach","element","addEventListener","onMouseClick","onMouseDoubleClick","teardown","removeEventListener","constructor","dispatcher","e","dispatch","offsetX","offsetY","clientX","clientY","pageX","pageY","target","view","altKey","ctrlKey","shiftKey","MouseClickDriver"],"mappings":"AAAA,SAASA,eAAe,EAAEC,qBAAqB,QAAQ,qBAAoB;AAI3E,OAAO,MAAMC;IA0CXC,SAAS;YACN,eACA;QADA,CAAA,gBAAA,IAAI,CAACC,OAAO,cAAZ,2BAAA,KAAA,IAAA,cAAcC,iBAAiB,SAAS,IAAI,CAACC,YAAY;QACzD,CAAA,iBAAA,IAAI,CAACF,OAAO,cAAZ,4BAAA,KAAA,IAAA,eAAcC,iBAAiB,YAAY,IAAI,CAACE,kBAAkB;IACrE;IAEAC,WAAiB;YACd,eACA;QADA,CAAA,gBAAA,IAAI,CAACJ,OAAO,cAAZ,2BAAA,KAAA,IAAA,cAAcK,oBAAoB,SAAS,IAAI,CAACH,YAAY;QAC5D,CAAA,iBAAA,IAAI,CAACF,OAAO,cAAZ,4BAAA,KAAA,IAAA,eAAcK,oBAAoB,YAAY,IAAI,CAACF,kBAAkB;IACxE;IAhDAG,YAAoBC,YAAsDP,QAAuC;0BAA7FO;uBAAsDP;aAI1EE,eAAe,CAACM,IAAkB;YAChC,IAAI,CAACD,UAAU,CAACE,QAAQ,CACtB,IAAIb,gBAAgB;gBAClBc,SAASF,EAAEE,OAAO;gBAClBC,SAASH,EAAEG,OAAO;gBAClBC,SAASJ,EAAEI,OAAO;gBAClBC,SAASL,EAAEK,OAAO;gBAClBC,OAAON,EAAEM,KAAK;gBACdC,OAAOP,EAAEO,KAAK;gBACdC,QAAQR,EAAEQ,MAAM;gBAChBC,MAAMT,EAAES,IAAI;gBACZC,QAAQV,EAAEU,MAAM;gBAChBC,SAASX,EAAEW,OAAO;gBAClBC,UAAUZ,EAAEY,QAAQ;YACtB,GAAGZ;QAEP;aAEAL,qBAAqB,CAACK,IAAkB;YACtC,IAAI,CAACD,UAAU,CAACE,QAAQ,CACtB,IAAIZ,sBAAsB;gBACxBa,SAASF,EAAEE,OAAO;gBAClBC,SAASH,EAAEG,OAAO;gBAClBC,SAASJ,EAAEI,OAAO;gBAClBC,SAASL,EAAEK,OAAO;gBAClBC,OAAON,EAAEM,KAAK;gBACdC,OAAOP,EAAEO,KAAK;gBACdC,QAAQR,EAAEQ,MAAM;gBAChBC,MAAMT,EAAES,IAAI;gBACZC,QAAQV,EAAEU,MAAM;gBAChBC,SAASX,EAAEW,OAAO;gBAClBC,UAAUZ,EAAEY,QAAQ;YACtB,GAAGZ;QAEP;QArCE,IAAI,CAACT,MAAM;IACb;AAgDF,CAAC;AAED,OAAO,MAAMsB,mBAAmC,CAC9Cd,YACAP,UACG;IACH,OAAO,IAAIF,qBACTS,YACAP;AAEJ,EAAC"}