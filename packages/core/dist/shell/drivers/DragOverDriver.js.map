{"version":3,"sources":["../../../src/shell/drivers/DragOverDriver.ts"],"sourcesContent":["import { IDesignerShell, IDriver, IDriverFactory } from \"interfaces\"\r\nimport { DragMoveEvent } from \"../events\"\r\n\r\nexport class DragOverDriverImpl implements IDriver {\r\n\r\n  private moveEvent: MouseEvent | null = null\r\n  constructor(private shell: IDesignerShell, private htmlElement: Element | Node | HTMLElement) {\r\n    this.htmlElement.addEventListener('dragover', this.onMouseMove as EventListener)\r\n    this.htmlElement.addEventListener('mousemove', this.onMouseMove as EventListener)\r\n  }\r\n\r\n  onMouseMove = (e: MouseEvent | DragEvent) => {\r\n    if (\r\n      e.clientX === this.moveEvent?.clientX &&\r\n      e.clientY === this.moveEvent?.clientY\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if(!this.shell.dragging){\r\n      return\r\n    }\r\n    \r\n    this.shell.dispatch(\r\n      new DragMoveEvent({\r\n        offsetX: e.offsetX,\r\n        offsetY: e.offsetY,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n        target: e.target,\r\n        view: e.view,\r\n        altKey: e.altKey,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n      }, e)\r\n    )\r\n    this.moveEvent = e\r\n  }\r\n  teardown(): void {\r\n    this.htmlElement.removeEventListener('dragover', this.onMouseMove as EventListener)\r\n    this.htmlElement.removeEventListener('mousemove', this.onMouseMove as EventListener)\r\n  }\r\n}\r\n\r\nexport const DragOverDriver: IDriverFactory = (\r\n  shell: IDesignerShell,\r\n  htmlElement: Element | Node | HTMLElement,\r\n) => {\r\n  return new DragOverDriverImpl(\r\n    shell,\r\n    htmlElement,\r\n  )\r\n}"],"names":["DragMoveEvent","DragOverDriverImpl","teardown","htmlElement","removeEventListener","onMouseMove","constructor","shell","moveEvent","e","clientX","clientY","dragging","dispatch","offsetX","offsetY","pageX","pageY","target","view","altKey","ctrlKey","shiftKey","addEventListener","DragOverDriver"],"mappings":"AACA,SAASA,aAAa,QAAQ,YAAW;AAEzC,OAAO,MAAMC;IAqCXC,WAAiB;QACf,IAAI,CAACC,WAAW,CAACC,mBAAmB,CAAC,YAAY,IAAI,CAACC,WAAW;QACjE,IAAI,CAACF,WAAW,CAACC,mBAAmB,CAAC,aAAa,IAAI,CAACC,WAAW;IACpE;IArCAC,YAAoBC,OAA+BJ,YAA2C;qBAA1EI;2BAA+BJ;aAD3CK,YAA+B,IAAI;aAM3CH,cAAc,CAACI,IAA8B;gBAE3B,iBACA;YAFhB,IACEA,EAAEC,OAAO,KAAK,CAAA,CAAA,kBAAA,IAAI,CAACF,SAAS,cAAd,6BAAA,KAAA,IAAA,gBAAgBE,OAAO,AAAD,KACpCD,EAAEE,OAAO,KAAK,CAAA,CAAA,mBAAA,IAAI,CAACH,SAAS,cAAd,8BAAA,KAAA,IAAA,iBAAgBG,OAAO,AAAD,GACpC;gBACA;YACF,CAAC;YAED,IAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,EAAC;gBACtB;YACF,CAAC;YAED,IAAI,CAACL,KAAK,CAACM,QAAQ,CACjB,IAAIb,cAAc;gBAChBc,SAASL,EAAEK,OAAO;gBAClBC,SAASN,EAAEM,OAAO;gBAClBL,SAASD,EAAEC,OAAO;gBAClBC,SAASF,EAAEE,OAAO;gBAClBK,OAAOP,EAAEO,KAAK;gBACdC,OAAOR,EAAEQ,KAAK;gBACdC,QAAQT,EAAES,MAAM;gBAChBC,MAAMV,EAAEU,IAAI;gBACZC,QAAQX,EAAEW,MAAM;gBAChBC,SAASZ,EAAEY,OAAO;gBAClBC,UAAUb,EAAEa,QAAQ;YACtB,GAAGb;YAEL,IAAI,CAACD,SAAS,GAAGC;QACnB;QAhCE,IAAI,CAACN,WAAW,CAACoB,gBAAgB,CAAC,YAAY,IAAI,CAAClB,WAAW;QAC9D,IAAI,CAACF,WAAW,CAACoB,gBAAgB,CAAC,aAAa,IAAI,CAAClB,WAAW;IACjE;AAmCF,CAAC;AAED,OAAO,MAAMmB,iBAAiC,CAC5CjB,OACAJ,cACG;IACH,OAAO,IAAIF,mBACTM,OACAJ;AAEJ,EAAC"}