{"version":3,"sources":["../../src/reducers/nodesById.ts"],"sourcesContent":["import { ADD_NODES, CHANGE_NODE_META, DELETE_NODES, INITIALIZE, MOVE_NODES, RECOVER_SNAPSHOT, REMOVE_DOCUMENT, REMOVE_SLOT } from \"actions/registry\"\r\nimport { ID } from \"interfaces\"\r\nimport { IAction } from \"interfaces/action\"\r\nimport { invariant } from \"utils/util-invariant\"\r\nimport { IDocumentAction, NodeRelativePosition, ITreeNode } from \"../interfaces/document\"\r\nimport { DocumentInitPayload, AddNodesPayload, DocumentActionPayload, MoveNodesPayload, DeleteNodesPayload, ChangeMetaPayloads, RecoverSnapshotPayload, RemoveSlotPayload } from \"../interfaces/payloads\"\r\n\r\nexport type NodesById = {\r\n\t[id: ID]: ITreeNode\r\n}\r\nexport type State = NodesById\r\n\r\nexport function nodesById(\r\n\tstate: State = {},\r\n\taction: IAction<DocumentActionPayload | ChangeMetaPayloads>,\r\n): State {\r\n\tconst { payload } = action\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZE:\r\n\t\t\treturn (payload as DocumentInitPayload)?.nodesById || {}\r\n\t\tcase ADD_NODES:\r\n\t\t\treturn addNods(state, action as IDocumentAction<DocumentActionPayload>)\r\n\t\tcase MOVE_NODES:\r\n\t\t\treturn moveNodes(state, action as IDocumentAction<DocumentActionPayload>)\r\n\t\tcase DELETE_NODES:\r\n\t\t\treturn remove(state, (payload as DeleteNodesPayload).sourceIds)\r\n\t\tcase CHANGE_NODE_META:\r\n\t\t\treturn changeNodeMeta(state, payload as ChangeMetaPayloads)\r\n\t\tcase RECOVER_SNAPSHOT:\r\n\t\t\treturn revoverSnapshot(state, action as IDocumentAction<RecoverSnapshotPayload>)\r\n\t\tcase REMOVE_SLOT:\r\n\t\t\treturn removeSlot(state, action as IDocumentAction<RemoveSlotPayload>)\r\n\r\n\t\tcase REMOVE_DOCUMENT:\r\n\t\t\tconst newState: State = {}\r\n\t\t\tfor (const key of Object.keys(state)) {\r\n\t\t\t\tif (state[key]?.documentId !== (action as IDocumentAction<DocumentActionPayload>).payload?.documentId) {\r\n\t\t\t\t\tnewState[key] = state[key]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newState\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction addNods(state: State = {},\r\n\taction: IDocumentAction<DocumentActionPayload>) {\r\n\tconst { payload } = action\r\n\tconst addPlayload = payload as AddNodesPayload\r\n\tconst { pos, slot } = addPlayload\r\n\tconst newState = Object.assign({}, state, addPlayload.nodes.nodesById)\r\n\tconst sourceIds = addPlayload.nodes.rootNodes.map(node => node.id)\r\n\tif (pos === NodeRelativePosition.InTop || pos === NodeRelativePosition.InBottom) {\r\n\t\treturn addIn(newState, sourceIds, addPlayload.targetId, pos)\r\n\t} else if (pos === NodeRelativePosition.Before || pos === NodeRelativePosition.After) {\r\n\t\treturn addSiblings(newState, sourceIds, addPlayload.targetId, pos)\r\n\t} else if (slot) {\r\n\t\treturn addSlot(newState, addPlayload.targetId, slot, sourceIds[0])\r\n\t}\r\n\treturn newState\r\n}\r\n\r\nfunction moveNodes(state: State = {},\r\n\taction: IDocumentAction<DocumentActionPayload>) {\r\n\tconst { payload } = action\r\n\tconst movePlayload = payload as MoveNodesPayload\r\n\tconst movePos = movePlayload.pos\r\n\tconst newState = Object.assign({}, state)\r\n\tfor (const targetId of movePlayload.sourceIds) {\r\n\t\tconst targetNode = state[targetId]\r\n\t\tinvariant(targetNode, \"can not find target node\")\r\n\t\tconst parentNode = state[targetNode.parentId || \"\"]\r\n\t\t//从父节点中删除\r\n\t\tnewState[targetNode.parentId || \"\"] = Object.assign({}, parentNode, { children: parentNode?.children?.filter(id => id !== targetId) })\r\n\r\n\t\t//再加入\r\n\t\tif (movePos === NodeRelativePosition.InTop || movePos === NodeRelativePosition.InBottom) {\r\n\t\t\treturn addIn(newState, movePlayload.sourceIds, movePlayload.targetId, movePos)\r\n\t\t} else if (movePos === NodeRelativePosition.Before || movePos === NodeRelativePosition.After) {\r\n\t\t\treturn addSiblings(newState, movePlayload.sourceIds, movePlayload.targetId, movePos)\r\n\t\t}\r\n\t}\r\n\r\n\treturn newState\r\n}\r\n\r\nfunction addIn(state: NodesById, sourceIds: ID[], targetId: ID, pos: NodeRelativePosition) {\r\n\tconst targetNode = state[targetId]\r\n\tinvariant(targetNode, \"can not find target node\")\r\n\tconst newChildren = pos === NodeRelativePosition.InBottom\r\n\t\t? [...targetNode.children, ...sourceIds]\r\n\t\t: [...sourceIds, ...targetNode.children]\r\n\tlet newState = Object.assign({}, state, {\r\n\t\t[targetNode.id]: {\r\n\t\t\t...targetNode,\r\n\t\t\tchildren: newChildren\r\n\t\t}\r\n\t})\r\n\r\n\tfor (const id of sourceIds) {\r\n\t\tnewState = { ...newState, [id]: { ...newState[id], parentId: targetId } }\r\n\t}\r\n\r\n\treturn newState\r\n}\r\n\r\n//未调试\r\nfunction addSiblings(state: NodesById, sourceIds: ID[], targetId: ID, pos: NodeRelativePosition) {\r\n\tconst targetNode = state[targetId]\r\n\tinvariant(targetNode, \"can not find target node\")\r\n\tconst parentNode = state[targetNode.parentId || \"\"]\r\n\tinvariant(parentNode, \"can not find parent on target node\")\r\n\tconst targetIndex = parentNode.children.indexOf(targetId) + (pos === NodeRelativePosition.After ? 1 : 0)\r\n\tconst newSibings = parentNode.children.slice(0, targetIndex)\r\n\t\t.concat(sourceIds)\r\n\t\t.concat(parentNode.children.slice(targetIndex))\r\n\tlet newState = Object.assign({}, state, {\r\n\t\t[parentNode.id]: {\r\n\t\t\t...parentNode,\r\n\t\t\tchildren: newSibings\r\n\t\t}\r\n\t})\r\n\r\n\tfor (const id of sourceIds) {\r\n\t\tnewState = { ...newState, [id]: { ...newState[id], parentId: targetNode.parentId } }\r\n\t}\r\n\r\n\treturn newState\r\n}\r\n\r\nfunction remove(state: NodesById, targetIds: ID[]): NodesById {\r\n\tconst newState: NodesById = {}\r\n\tfor (const key of Object.keys(state)) {\r\n\t\tif (!targetIds.find(id => id === key)) {\r\n\t\t\tnewState[key] = state[key]\r\n\t\t\tif (newState[key].children?.find(childId => targetIds.find(id => id === childId))) {\r\n\t\t\t\tnewState[key] = {\r\n\t\t\t\t\t...newState[key],\r\n\t\t\t\t\tchildren: newState[key].children.filter(childId => !targetIds.find(id => id === childId))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const slotName of Object.keys(newState[key].slots || {})) {\r\n\t\t\t\tconst slotId = newState[key].slots?.[slotName] || \"\"\r\n\t\t\t\tif (targetIds.find(id => id === slotId)) {\r\n\t\t\t\t\tdelete newState[key].slots?.[slotName]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn newState\r\n}\r\n\r\nfunction changeNodeMeta(state: NodesById, payload: ChangeMetaPayloads): NodesById {\r\n\tconst node = state[payload.id]\r\n\treturn {\r\n\t\t...state,\r\n\t\t[payload.id]: { ...node, meta: payload.meta },\r\n\t}\r\n}\r\n\r\nfunction revoverSnapshot(state: NodesById, action: IDocumentAction<RecoverSnapshotPayload>): NodesById {\r\n\tconst newState: NodesById = Object.assign({}, action.payload?.snapshot.nodes || {})\r\n\tfor (const key of Object.keys(state)) {\r\n\t\tconst node = state[key]\r\n\t\tif (node.documentId !== action.payload?.documentId) {\r\n\t\t\tnewState[key] = node\r\n\t\t}\r\n\t}\r\n\treturn newState\r\n}\r\n\r\nfunction removeSlot(state: NodesById, action: IDocumentAction<RemoveSlotPayload>): NodesById {\r\n\tconst nodeId = action.payload?.nodeId\r\n\tif (action.payload && nodeId) {\r\n\t\tlet newState: NodesById = { ...state }\r\n\t\tconst node = state[nodeId]\r\n\t\tconst newSlots: any = {}\r\n\t\tfor (const slotName of Object.keys(node.slots || {})) {\r\n\t\t\tif (slotName !== action.payload.slotName) {\r\n\t\t\t\tnewSlots[slotName] = node.slots?.[slotName]\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (node) {\r\n\t\t\tnewState[nodeId] = {\r\n\t\t\t\t...node,\r\n\t\t\t\tslots: newSlots\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const id of Object.keys(newState)) {\r\n\t\t\tif (id === node.slots?.[action.payload?.slotName]) {\r\n\t\t\t\tdelete newState[id]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newState\r\n\t}\r\n\r\n\treturn state\r\n}\r\n\r\nfunction addSlot(state: NodesById, targetId: ID, slotName: string, slotId: ID): NodesById {\r\n\tif (targetId) {\r\n\t\tlet newState: NodesById = { ...state }\r\n\t\tconst node = state[targetId]\r\n\t\tconst newSlots: any = { ...node.slots, [slotName]: slotId }\r\n\t\tnewState[targetId] = { ...node, slots: newSlots }\r\n\t\tif (slotId) {\r\n\t\t\tnewState[slotId] = { ...newState[slotId], parentId: targetId }\r\n\t\t}\r\n\t\treturn newState\r\n\t}\r\n\treturn state\r\n}\r\n"],"names":["ADD_NODES","CHANGE_NODE_META","DELETE_NODES","INITIALIZE","MOVE_NODES","RECOVER_SNAPSHOT","REMOVE_DOCUMENT","REMOVE_SLOT","invariant","NodeRelativePosition","nodesById","state","action","payload","type","addNods","moveNodes","remove","sourceIds","changeNodeMeta","revoverSnapshot","removeSlot","newState","key","Object","keys","documentId","addPlayload","pos","slot","assign","nodes","rootNodes","map","node","id","InTop","InBottom","addIn","targetId","Before","After","addSiblings","addSlot","movePlayload","movePos","parentNode","targetNode","parentId","children","filter","newChildren","targetIndex","indexOf","newSibings","slice","concat","targetIds","find","childId","slotName","slots","slotId","meta","snapshot","nodeId","newSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAS,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,WAAW,QAAQ,mBAAkB;AAGpJ,SAASC,SAAS,QAAQ,uBAAsB;AAChD,SAA0BC,oBAAoB,QAAmB,yBAAwB;AAQzF,OAAO,SAASC,UACfC,QAAe,CAAC,CAAC,EACjBC,MAA2D,EACnD;IACR,MAAM,EAAEC,QAAO,EAAE,GAAGD;IACpB,OAAQA,OAAOE,IAAI;QAClB,KAAKX;YACJ,OAAO,CAAA,AAACU,oBAAAA,qBAAD,KAAA,IAAA,AAACA,QAAiCH,SAAS,AAAD,KAAK,CAAC;QACxD,KAAKV;YACJ,OAAOe,QAAQJ,OAAOC;QACvB,KAAKR;YACJ,OAAOY,UAAUL,OAAOC;QACzB,KAAKV;YACJ,OAAOe,OAAON,OAAO,AAACE,QAA+BK,SAAS;QAC/D,KAAKjB;YACJ,OAAOkB,eAAeR,OAAOE;QAC9B,KAAKR;YACJ,OAAOe,gBAAgBT,OAAOC;QAC/B,KAAKL;YACJ,OAAOc,WAAWV,OAAOC;QAE1B,KAAKN;YACJ,MAAMgB,WAAkB,CAAC;YACzB,KAAK,MAAMC,OAAOC,OAAOC,IAAI,CAACd,OAAQ;oBACjCA,YAA2B;gBAA/B,IAAIA,CAAAA,CAAAA,aAAAA,KAAK,CAACY,IAAI,cAAVZ,wBAAAA,KAAAA,IAAAA,WAAYe,UAAU,AAAD,MAAM,CAAA,CAAA,kBAAA,AAACd,OAAkDC,OAAO,cAA1D,6BAAA,KAAA,IAAA,gBAA4Da,UAAU,AAAD,GAAG;oBACtGJ,QAAQ,CAACC,IAAI,GAAGZ,KAAK,CAACY,IAAI;gBAC3B,CAAC;YACF;YACA,OAAOD;QACR;YACC,OAAOX;IACT;AACD,CAAC;AAED,SAASI,QAAQJ,QAAe,CAAC,CAAC,EACjCC,MAA8C,EAAE;IAChD,MAAM,EAAEC,QAAO,EAAE,GAAGD;IACpB,MAAMe,cAAcd;IACpB,MAAM,EAAEe,IAAG,EAAEC,KAAI,EAAE,GAAGF;IACtB,MAAML,WAAWE,OAAOM,MAAM,CAAC,CAAC,GAAGnB,OAAOgB,YAAYI,KAAK,CAACrB,SAAS;IACrE,MAAMQ,YAAYS,YAAYI,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,CAAAA,OAAQA,KAAKC,EAAE;IACjE,IAAIP,QAAQnB,qBAAqB2B,KAAK,IAAIR,QAAQnB,qBAAqB4B,QAAQ,EAAE;QAChF,OAAOC,MAAMhB,UAAUJ,WAAWS,YAAYY,QAAQ,EAAEX;IACzD,OAAO,IAAIA,QAAQnB,qBAAqB+B,MAAM,IAAIZ,QAAQnB,qBAAqBgC,KAAK,EAAE;QACrF,OAAOC,YAAYpB,UAAUJ,WAAWS,YAAYY,QAAQ,EAAEX;IAC/D,OAAO,IAAIC,MAAM;QAChB,OAAOc,QAAQrB,UAAUK,YAAYY,QAAQ,EAAEV,MAAMX,SAAS,CAAC,EAAE;IAClE,CAAC;IACD,OAAOI;AACR;AAEA,SAASN,UAAUL,QAAe,CAAC,CAAC,EACnCC,MAA8C,EAAE;IAChD,MAAM,EAAEC,QAAO,EAAE,GAAGD;IACpB,MAAMgC,eAAe/B;IACrB,MAAMgC,UAAUD,aAAahB,GAAG;IAChC,MAAMN,WAAWE,OAAOM,MAAM,CAAC,CAAC,GAAGnB;IACnC,KAAK,MAAM4B,YAAYK,aAAa1B,SAAS,CAAE;YAKkC4B;QAJhF,MAAMC,aAAapC,KAAK,CAAC4B,SAAS;QAClC/B,UAAUuC,YAAY;QACtB,MAAMD,aAAanC,KAAK,CAACoC,WAAWC,QAAQ,IAAI,GAAG;QACnD,SAAS;QACT1B,QAAQ,CAACyB,WAAWC,QAAQ,IAAI,GAAG,GAAGxB,OAAOM,MAAM,CAAC,CAAC,GAAGgB,YAAY;YAAEG,QAAQ,EAAEH,uBAAAA,wBAAAA,KAAAA,IAAAA,CAAAA,uBAAAA,WAAYG,QAAQ,cAApBH,kCAAAA,KAAAA,IAAAA,qBAAsBI,OAAOf,CAAAA,KAAMA,OAAOI;QAAU;QAEpI,KAAK;QACL,IAAIM,YAAYpC,qBAAqB2B,KAAK,IAAIS,YAAYpC,qBAAqB4B,QAAQ,EAAE;YACxF,OAAOC,MAAMhB,UAAUsB,aAAa1B,SAAS,EAAE0B,aAAaL,QAAQ,EAAEM;QACvE,OAAO,IAAIA,YAAYpC,qBAAqB+B,MAAM,IAAIK,YAAYpC,qBAAqBgC,KAAK,EAAE;YAC7F,OAAOC,YAAYpB,UAAUsB,aAAa1B,SAAS,EAAE0B,aAAaL,QAAQ,EAAEM;QAC7E,CAAC;IACF;IAEA,OAAOvB;AACR;AAEA,SAASgB,MAAM3B,KAAgB,EAAEO,SAAe,EAAEqB,QAAY,EAAEX,GAAyB,EAAE;IAC1F,MAAMmB,aAAapC,KAAK,CAAC4B,SAAS;IAClC/B,UAAUuC,YAAY;IACtB,MAAMI,cAAcvB,QAAQnB,qBAAqB4B,QAAQ,GACtD;WAAIU,WAAWE,QAAQ;WAAK/B;KAAU,GACtC;WAAIA;WAAc6B,WAAWE,QAAQ;KAAC;IACzC,IAAI3B,WAAWE,OAAOM,MAAM,CAAC,CAAC,GAAGnB,OAAO;QACvC,CAACoC,WAAWZ,EAAE,CAAC,EAAE,qCACbY;YACHE,UAAUE;;IAEZ;IAEA,KAAK,MAAMhB,MAAMjB,UAAW;QAC3BI,WAAW,qCAAKA;YAAU,CAACa,GAAG,EAAE,qCAAKb,QAAQ,CAACa,GAAG;gBAAEa,UAAUT;;;IAC9D;IAEA,OAAOjB;AACR;AAEA,KAAK;AACL,SAASoB,YAAY/B,KAAgB,EAAEO,SAAe,EAAEqB,QAAY,EAAEX,GAAyB,EAAE;IAChG,MAAMmB,aAAapC,KAAK,CAAC4B,SAAS;IAClC/B,UAAUuC,YAAY;IACtB,MAAMD,aAAanC,KAAK,CAACoC,WAAWC,QAAQ,IAAI,GAAG;IACnDxC,UAAUsC,YAAY;IACtB,MAAMM,cAAcN,WAAWG,QAAQ,CAACI,OAAO,CAACd,YAAaX,CAAAA,QAAQnB,qBAAqBgC,KAAK,GAAG,IAAI,CAAC,AAAD;IACtG,MAAMa,aAAaR,WAAWG,QAAQ,CAACM,KAAK,CAAC,GAAGH,aAC9CI,MAAM,CAACtC,WACPsC,MAAM,CAACV,WAAWG,QAAQ,CAACM,KAAK,CAACH;IACnC,IAAI9B,WAAWE,OAAOM,MAAM,CAAC,CAAC,GAAGnB,OAAO;QACvC,CAACmC,WAAWX,EAAE,CAAC,EAAE,qCACbW;YACHG,UAAUK;;IAEZ;IAEA,KAAK,MAAMnB,MAAMjB,UAAW;QAC3BI,WAAW,qCAAKA;YAAU,CAACa,GAAG,EAAE,qCAAKb,QAAQ,CAACa,GAAG;gBAAEa,UAAUD,WAAWC,QAAQ;;;IACjF;IAEA,OAAO1B;AACR;AAEA,SAASL,OAAON,KAAgB,EAAE8C,SAAe,EAAa;IAC7D,MAAMnC,WAAsB,CAAC;IAC7B,KAAK,MAAMC,OAAOC,OAAOC,IAAI,CAACd,OAAQ;QACrC,IAAI,CAAC8C,UAAUC,IAAI,CAACvB,CAAAA,KAAMA,OAAOZ,MAAM;gBAElCD;YADJA,QAAQ,CAACC,IAAI,GAAGZ,KAAK,CAACY,IAAI;YAC1B,IAAID,CAAAA,yBAAAA,QAAQ,CAACC,IAAI,CAAC0B,QAAQ,cAAtB3B,oCAAAA,KAAAA,IAAAA,uBAAwBoC,KAAKC,CAAAA,UAAWF,UAAUC,IAAI,CAACvB,CAAAA,KAAMA,OAAOwB,WAAW;gBAClFrC,QAAQ,CAACC,IAAI,GAAG,qCACZD,QAAQ,CAACC,IAAI;oBAChB0B,UAAU3B,QAAQ,CAACC,IAAI,CAAC0B,QAAQ,CAACC,MAAM,CAACS,CAAAA,UAAW,CAACF,UAAUC,IAAI,CAACvB,CAAAA,KAAMA,OAAOwB;;YAElF,CAAC;YACD,KAAK,MAAMC,YAAYpC,OAAOC,IAAI,CAACH,QAAQ,CAACC,IAAI,CAACsC,KAAK,IAAI,CAAC,GAAI;oBAC/CvC;gBAAf,MAAMwC,SAASxC,CAAAA,CAAAA,sBAAAA,QAAQ,CAACC,IAAI,CAACsC,KAAK,cAAnBvC,iCAAAA,KAAAA,IAAAA,mBAAqB,CAACsC,SAAS,AAAD,KAAK;gBAClD,IAAIH,UAAUC,IAAI,CAACvB,CAAAA,KAAMA,OAAO2B,SAAS;wBACjCxC;oBAAAA,CAAAA,uBAAAA,QAAQ,CAACC,IAAI,CAACsC,KAAK,cAAnBvC,kCAAAA,KAAAA,IAAP,OAAOA,oBAAqB,CAACsC,SAAS;gBACvC,CAAC;YACF;QACD,CAAC;IACF;IACA,OAAOtC;AACR;AAEA,SAASH,eAAeR,KAAgB,EAAEE,OAA2B,EAAa;IACjF,MAAMqB,OAAOvB,KAAK,CAACE,QAAQsB,EAAE,CAAC;IAC9B,OAAO,qCACHxB;QACH,CAACE,QAAQsB,EAAE,CAAC,EAAE,qCAAKD;YAAM6B,MAAMlD,QAAQkD,IAAI;;;AAE7C;AAEA,SAAS3C,gBAAgBT,KAAgB,EAAEC,MAA+C,EAAa;QACxDA;IAA9C,MAAMU,WAAsBE,OAAOM,MAAM,CAAC,CAAC,GAAGlB,CAAAA,CAAAA,kBAAAA,OAAOC,OAAO,cAAdD,6BAAAA,KAAAA,IAAAA,gBAAgBoD,SAASjC,KAAK,KAAI,CAAC;IACjF,KAAK,MAAMR,OAAOC,OAAOC,IAAI,CAACd,OAAQ;YAEbC;QADxB,MAAMsB,OAAOvB,KAAK,CAACY,IAAI;QACvB,IAAIW,KAAKR,UAAU,KAAKd,CAAAA,CAAAA,mBAAAA,OAAOC,OAAO,cAAdD,8BAAAA,KAAAA,IAAAA,iBAAgBc,UAAU,AAAD,GAAG;YACnDJ,QAAQ,CAACC,IAAI,GAAGW;QACjB,CAAC;IACF;IACA,OAAOZ;AACR;AAEA,SAASD,WAAWV,KAAgB,EAAEC,MAA0C,EAAa;QAC7EA;IAAf,MAAMqD,SAASrD,CAAAA,kBAAAA,OAAOC,OAAO,cAAdD,6BAAAA,KAAAA,IAAAA,gBAAgBqD,MAAM;IACrC,IAAIrD,OAAOC,OAAO,IAAIoD,QAAQ;QAC7B,IAAI3C,WAAsB,kBAAKX;QAC/B,MAAMuB,OAAOvB,KAAK,CAACsD,OAAO;QAC1B,MAAMC,WAAgB,CAAC;QACvB,KAAK,MAAMN,YAAYpC,OAAOC,IAAI,CAACS,KAAK2B,KAAK,IAAI,CAAC,GAAI;YACrD,IAAID,aAAahD,OAAOC,OAAO,CAAC+C,QAAQ,EAAE;oBACpB1B;gBAArBgC,QAAQ,CAACN,SAAS,GAAG1B,CAAAA,cAAAA,KAAK2B,KAAK,cAAV3B,yBAAAA,KAAAA,IAAAA,WAAY,CAAC0B,SAAS;YAC5C,CAAC;QACF;QACA,IAAI1B,MAAM;YACTZ,QAAQ,CAAC2C,OAAO,GAAG,qCACf/B;gBACH2B,OAAOK;;QAET,CAAC;QAED,KAAK,MAAM/B,MAAMX,OAAOC,IAAI,CAACH,UAAW;gBAC5BY,cAAatB;YAAxB,IAAIuB,OAAOD,CAAAA,CAAAA,eAAAA,KAAK2B,KAAK,cAAV3B,0BAAAA,KAAAA,IAAAA,YAAY,CAACtB,CAAAA,mBAAAA,OAAOC,OAAO,cAAdD,8BAAAA,KAAAA,IAAAA,iBAAgBgD,QAAQ,CAAC,AAAD,GAAG;gBAClD,OAAOtC,QAAQ,CAACa,GAAG;YACpB,CAAC;QACF;QAEA,OAAOb;IACR,CAAC;IAED,OAAOX;AACR;AAEA,SAASgC,QAAQhC,KAAgB,EAAE4B,QAAY,EAAEqB,QAAgB,EAAEE,MAAU,EAAa;IACzF,IAAIvB,UAAU;QACb,IAAIjB,WAAsB,kBAAKX;QAC/B,MAAMuB,OAAOvB,KAAK,CAAC4B,SAAS;QAC5B,MAAM2B,WAAgB,qCAAKhC,KAAK2B,KAAK;YAAE,CAACD,SAAS,EAAEE;;QACnDxC,QAAQ,CAACiB,SAAS,GAAG,qCAAKL;YAAM2B,OAAOK;;QACvC,IAAIJ,QAAQ;YACXxC,QAAQ,CAACwC,OAAO,GAAG,qCAAKxC,QAAQ,CAACwC,OAAO;gBAAEd,UAAUT;;QACrD,CAAC;QACD,OAAOjB;IACR,CAAC;IACD,OAAOX;AACR"}