{"version":3,"sources":["../../src/controllers/DragOverController.ts"],"sourcesContent":["import { DragMoveEvent } from \"../shell/events\";\r\nimport { AcceptType, DrageOverOptions } from \"../interfaces/action\";\r\nimport { IPlugin } from \"../interfaces/plugin\";\r\nimport { IDropPosition, PositionJudger, RelativePosition } from \"../utils/coordinate\";\r\nimport { DragOverState } from \"../reducers/dragOver\";\r\nimport { isArr } from \"../utils/types\";\r\nimport { ID, IDesignerEngine, Unsubscribe } from \"../interfaces\";\r\n\r\nexport class DragOverControllerImpl implements IPlugin {\r\n  name: string = \"default.drag-over-controller\";\r\n\r\n  dragover: DrageOverOptions | null = null\r\n  unsucribe: Unsubscribe\r\n  unscribeNodeChange: Unsubscribe\r\n  constructor(protected engine: IDesignerEngine) {\r\n    this.unsucribe = engine.getShell().subscribeTo(DragMoveEvent, this.handleDragMove)\r\n    this.unscribeNodeChange = engine.getMonitor().subscribeToDragOver(this.handleDragoverChange)\r\n  }\r\n\r\n  handleDragoverChange = (dragover: DragOverState | null) => {\r\n    if (!dragover) {\r\n      this.dragover = null\r\n    }\r\n  }\r\n\r\n  handleDragMove = (e: DragMoveEvent) => {\r\n    const { rxId } = e.data.targetRx || {}\r\n    if (rxId) {\r\n      if (this.engine.getMonitor().isDragging()) {\r\n        this.handleDragOver(rxId, e)\r\n      }\r\n    } else if (this.dragover) {\r\n      this.engine.getActions().dragover(null)\r\n      this.dragover = null\r\n    }\r\n  }\r\n\r\n  private handleDragOver(targetId: ID, e: DragMoveEvent) {\r\n    const node = this.engine.getMonitor().getNode(targetId)\r\n    if (node) {\r\n      const judger = new PositionJudger(node, this.engine)\r\n      const relativePosition = judger.judgePosition(e.data)\r\n      const dragover = relativePosition ? {\r\n        type: this.canAccept(relativePosition),\r\n        ...relativePosition,\r\n      } : null\r\n      if (this.dragover?.targetId !== dragover?.targetId || this.dragover?.type !== dragover?.type ||\r\n        this.dragover?.position !== dragover?.position\r\n      ) {\r\n        this.engine.getActions().dragover(dragover)\r\n        this.dragover = dragover\r\n      }\r\n    } else {\r\n      this.dragover = null\r\n    }\r\n  }\r\n\r\n  private canAccept(position: IDropPosition): AcceptType {\r\n    if (this.engine.getMonitor().getState().draggingNodes) {\r\n      return this.canAcceptNodes(position)\r\n    }\r\n    if (this.engine.getMonitor().getState().draggingResource) {\r\n      return this.canAcceptResource(position)\r\n    }\r\n\r\n    return AcceptType.Reject\r\n  }\r\n  private canAcceptNodes(position: IDropPosition) {\r\n    const sourceIds = this.engine.getMonitor().getState().draggingNodes?.nodeIds || []\r\n    for (const sourceId of sourceIds) {\r\n      const node = this.engine.getMonitor().getNode(sourceId)\r\n      if (position.position === RelativePosition.In && node) {\r\n        const beheavior = this.engine.getNodeBehavior(position.targetId)\r\n        if (beheavior?.isDroppable() && !node.meta.locked) {\r\n          return AcceptType.Accept\r\n        }\r\n      } else {\r\n        const parentId = this.engine.getMonitor().getNode(position.targetId)?.parentId\r\n        if (parentId) {\r\n          const beheavior = this.engine.getNodeBehavior(parentId)\r\n          if (beheavior?.isDroppable()) {\r\n            return AcceptType.Accept\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return AcceptType.Reject\r\n  }\r\n\r\n  private canAcceptResource(position: IDropPosition): AcceptType {\r\n    const resourceId = this.engine.getMonitor().getState().draggingResource?.resource\r\n    const resource = this.engine.getResourceManager().getResource(resourceId || \"\")\r\n    if (!resource) {\r\n      console.error(\"no resource to drop\")\r\n      return AcceptType.Reject\r\n    }\r\n    if (position.position === RelativePosition.In) {\r\n      const beheavior = this.engine.getNodeBehavior(position.targetId)\r\n      const node = this.engine.getMonitor().getNode(position.targetId)\r\n      if (beheavior?.isDroppable() && !node?.meta.locked) {\r\n        return AcceptType.Accept\r\n      }\r\n      if (isArr(resource.elements)) {\r\n        for (const element of resource.elements) {\r\n\r\n        }\r\n      }\r\n\r\n    } else {\r\n      const parentId = this.engine.getMonitor().getNode(position.targetId)?.parentId\r\n      if (parentId) {\r\n        const beheavior = this.engine.getNodeBehavior(parentId)\r\n        if (beheavior?.isDroppable()) {\r\n          return AcceptType.Accept\r\n        }\r\n      }\r\n    }\r\n\r\n    return AcceptType.Reject\r\n  }\r\n\r\n\r\n  destory(): void {\r\n    this.unsucribe()\r\n  }\r\n}\r\n\r\nexport const DragOverController = (engine: IDesignerEngine) => {\r\n  return new DragOverControllerImpl(engine)\r\n}"],"names":["DragMoveEvent","AcceptType","PositionJudger","RelativePosition","isArr","DragOverControllerImpl","handleDragOver","targetId","e","node","engine","getMonitor","getNode","judger","relativePosition","judgePosition","data","dragover","type","canAccept","position","getActions","getState","draggingNodes","canAcceptNodes","draggingResource","canAcceptResource","Reject","sourceIds","nodeIds","sourceId","In","beheavior","getNodeBehavior","isDroppable","meta","locked","Accept","parentId","resourceId","resource","getResourceManager","getResource","console","error","elements","element","destory","unsucribe","constructor","name","handleDragoverChange","handleDragMove","rxId","targetRx","isDragging","getShell","subscribeTo","unscribeNodeChange","subscribeToDragOver","DragOverController"],"mappings":"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"}